//*****************************************************************************
//*****************************************************************************
//  FILENAME: Counter8.h
//   Version: 2.5, Updated on 2013/5/19 at 10:42:30
//  Generated by PSoC Designer 5.4.2946
//
//  DESCRIPTION: Counter16 User Module C Language interface file
//-----------------------------------------------------------------------------
//  Copyright (c) Cypress Semiconductor 2013. All Rights Reserved.
//*****************************************************************************
//*****************************************************************************
#ifndef Counter8_INCLUDE
#define Counter8_INCLUDE

#include <m8c.h>

#pragma fastcall16 Counter8_EnableInt
#pragma fastcall16 Counter8_DisableInt
#pragma fastcall16 Counter8_Start
#pragma fastcall16 Counter8_Stop
#pragma fastcall16 Counter8_wReadCounter              // Read  DR0
#pragma fastcall16 Counter8_WritePeriod               // Write DR1
#pragma fastcall16 Counter8_wReadCompareValue         // Read  DR2
#pragma fastcall16 Counter8_WriteCompareValue         // Write DR2

// The following symbols are deprecated.
// They may be omitted in future releases
//
#pragma fastcall16 wCounter8_ReadCounter              // Read  DR0 (Deprecated)
#pragma fastcall16 wCounter8_ReadCompareValue         // Read  DR2 (Deprecated)

//-------------------------------------------------
// Prototypes of the Counter8 API.
//-------------------------------------------------
extern void Counter8_EnableInt(void);                           // Proxy Class 1
extern void Counter8_DisableInt(void);                          // Proxy Class 1
extern void Counter8_Start(void);                               // Proxy Class 1
extern void Counter8_Stop(void);                                // Proxy Class 1
extern WORD Counter8_wReadCounter(void);                        // Proxy Class 2
extern void Counter8_WritePeriod(WORD wPeriod);                 // Proxy Class 1
extern WORD Counter8_wReadCompareValue(void);                   // Proxy Class 1
extern void Counter8_WriteCompareValue(WORD wCompareValue);     // Proxy Class 1

// The following functions are deprecated.
// They may be omitted in future releases
//
extern WORD wCounter8_ReadCounter(void);            // Deprecated
extern WORD wCounter8_ReadCompareValue(void);       // Deprecated


//--------------------------------------------------
// Constants for Counter8 API's.
//--------------------------------------------------

#define Counter8_CONTROL_REG_START_BIT         ( 0x01 )
#define Counter8_INT_REG_ADDR                  ( 0x0e1 )
#define Counter8_INT_MASK                      ( 0x40 )


//--------------------------------------------------
// Constants for Counter8 user defined values
//--------------------------------------------------

#define Counter8_PERIOD                        ( 0x13 )
#define Counter8_COMPARE_VALUE                 ( 0x0 )


//-------------------------------------------------
// Register Addresses for Counter8
//-------------------------------------------------

#pragma ioport  Counter8_COUNTER_LSB_REG:   0x034          //DR0 Counter register LSB
BYTE            Counter8_COUNTER_LSB_REG;
#pragma ioport  Counter8_COUNTER_MSB_REG:   0x038          //DR0 Counter register MSB
BYTE            Counter8_COUNTER_MSB_REG;
#pragma ioport  Counter8_PERIOD_LSB_REG:    0x035          //DR1 Period register LSB
BYTE            Counter8_PERIOD_LSB_REG;
#pragma ioport  Counter8_PERIOD_MSB_REG:    0x039          //DR1 Period register MSB
BYTE            Counter8_PERIOD_MSB_REG;
#pragma ioport  Counter8_COMPARE_LSB_REG:   0x036          //DR2 Compare register LSB
BYTE            Counter8_COMPARE_LSB_REG;
#pragma ioport  Counter8_COMPARE_MSB_REG:   0x03a          //DR2 Compare register MSB
BYTE            Counter8_COMPARE_MSB_REG;
#pragma ioport  Counter8_CONTROL_LSB_REG:   0x037          //Control register LSB
BYTE            Counter8_CONTROL_LSB_REG;
#pragma ioport  Counter8_CONTROL_MSB_REG:   0x03b          //Control register MSB
BYTE            Counter8_CONTROL_MSB_REG;
#pragma ioport  Counter8_FUNC_LSB_REG:  0x134              //Function register LSB
BYTE            Counter8_FUNC_LSB_REG;
#pragma ioport  Counter8_FUNC_MSB_REG:  0x138              //Function register MSB
BYTE            Counter8_FUNC_MSB_REG;
#pragma ioport  Counter8_INPUT_LSB_REG: 0x135              //Input register LSB
BYTE            Counter8_INPUT_LSB_REG;
#pragma ioport  Counter8_INPUT_MSB_REG: 0x139              //Input register MSB
BYTE            Counter8_INPUT_MSB_REG;
#pragma ioport  Counter8_OUTPUT_LSB_REG:    0x136          //Output register LSB
BYTE            Counter8_OUTPUT_LSB_REG;
#pragma ioport  Counter8_OUTPUT_MSB_REG:    0x13a          //Output register MSB
BYTE            Counter8_OUTPUT_MSB_REG;
#pragma ioport  Counter8_INT_REG:       0x0e1              //Interrupt Mask Register
BYTE            Counter8_INT_REG;


//-------------------------------------------------
// Counter8 Macro 'Functions'
//-------------------------------------------------

#define Counter8_Start_M \
   ( Counter8_CONTROL_LSB_REG |=  Counter8_CONTROL_REG_START_BIT )

#define Counter8_Stop_M  \
   ( Counter8_CONTROL_LSB_REG &= ~Counter8_CONTROL_REG_START_BIT )

#define Counter8_EnableInt_M   \
   M8C_EnableIntMask(  Counter8_INT_REG, Counter8_INT_MASK )

#define Counter8_DisableInt_M  \
   M8C_DisableIntMask( Counter8_INT_REG, Counter8_INT_MASK )

#endif
// end of file Counter8.h
