                        .module motorcontrol.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./motorcontrol.c
                        .area lit(rom, con, rel, lit)
 0000           _OIKEUSKERROIN::
 0000 3F666666          .word 0x3f66,0x6666
 0004                   .dbfile Z:\robotti\Robor7\ROBOTT~1\ROBOTT~1\motorcontrol.c
 0004                   .dbsym e OIKEUSKERROIN _OIKEUSKERROIN kD
                        .area text(rom, con, rel)
 0000                   .dbfile Z:\robotti\Robor7\ROBOTT~1\ROBOTT~1\motorcontrol.c
 0000                   .dbfunc e InitPWM _InitPWM fV
 0000           _InitPWM::
 0000                   .dbline -1
 0000                   .dbline 21
 0000           ; #include <m8c.h>        // part specific constants and macros
 0000           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0000           ; 
 0000           ; #define BACKWARD      0b00000101; // Molemmat Eteen
 0000           ; #define FORWARD       0b00001010; //Molemmat Taakse
 0000           ; #define LEFTBRIGHTF 0b00001001; // Vasen Eteen Oikea Taakse
 0000           ; #define LEFTFRIGHTB 0b00000110; // Vasen Taakse Oikea Eteen
 0000           ; #define NOLLAA                0b11110000;             //Molemmat C/D pinnit 0
 0000           ; 
 0000           ; //Porttien osoitteet
 0000           ; //Port1_0 LEFTC      C = 1, D = 0 FORWARD
 0000           ; //Port1_1 LEFTD                C = 0, D = 1 BACKWARD 
 0000           ; //Port1_2 RIGHTC
 0000           ; //Port1_3 RIGHTD
 0000           ; 
 0000           ; //Voi joutua korjaamaan
 0000           ; const float OIKEUSKERROIN = 0.90f; //Kerroin nopeammalle puolelle jotta robotti kulkisi suoraan
 0000           ; 
 0000           ; //Käynnistää PWM Moduulit
 0000           ; void InitPWM(void)
 0000           ; {
 0000                   .dbline 22
 0000           ;       PWM8_VASEN_Start();
 0000 10                push X
 0001 7C0000            xcall _PWM8_VASEN_Start
 0004                   .dbline 23
 0004           ;       PWM8_OIKEA_Start();
 0004 7C0000            xcall _PWM8_OIKEA_Start
 0007 20                pop X
 0008                   .dbline -2
 0008           L1:
 0008                   .dbline 0 ; func end
 0008 7F                ret
 0009                   .dbend
 0009                   .dbfunc e MoveForward _MoveForward fV
 0009           ;          pulse -> X-5
 0009           _MoveForward::
 0009                   .dbline -1
 0009 10                push X
 000A 4F                mov X,SP
 000B 3802              add SP,2
 000D                   .dbline 31
 000D           ;       
 000D           ;       //Port1_Data_ADDR = LEFTC_Data_ADDR;
 000D           ;       //Port1_Data_ADDR &= NOLLAA;
 000D           ; }
 000D           ; 
 000D           ; //Kulkee eteenpäin arvolla..
 000D           ; void MoveForward(int pulse)
 000D           ; {                             
 000D                   .dbline 32
 000D           ;       LEFTC_Data_ADDR &= NOLLAA;
 000D 4104F0            and REG[0x4],-16
 0010                   .dbline 32
 0010                   .dbline 33
 0010           ;       LEFTC_Data_ADDR |= FORWARD;
 0010 43040A            or REG[0x4],10
 0013                   .dbline 33
 0013                   .dbline 35
 0013           ;       
 0013           ;       PWM8_VASEN_WritePulseWidth((BYTE)pulse);
 0013 52FC              mov A,[X-4]
 0015 10                push X
 0016 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 0019 20                pop X
 001A                   .dbline 36
 001A           ;       PWM8_OIKEA_WritePulseWidth((BYTE)(pulse * OIKEUSKERROIN));
 001A 550000            mov [__r1],<_OIKEUSKERROIN
 001D 5000              mov A,>_OIKEUSKERROIN
 001F 10                push X
 0020 5800              mov X,[__r1]
 0022 08                push A
 0023 28                romx
 0024 5300              mov [__r0],A
 0026 18                pop A
 0027 75                inc X
 0028 0900              adc A,0
 002A 08                push A
 002B 28                romx
 002C 5300              mov [__r1],A
 002E 18                pop A
 002F 75                inc X
 0030 0900              adc A,0
 0032 08                push A
 0033 28                romx
 0034 5300              mov [__r2],A
 0036 18                pop A
 0037 75                inc X
 0038 0900              adc A,0
 003A 28                romx
 003B 5300              mov [__r3],A
 003D 20                pop X
 003E 52FC              mov A,[X-4]
 0040 5300              mov [__r7],A
 0042 52FB              mov A,[X-5]
 0044 5300              mov [__r6],A
 0046 470080            tst [__r6],-128
 0049 A009              jz X0
 004B 5500FF            mov [__r5],-1
 004E 5500FF            mov [__r4],-1
 0051 8007              jmp X1
 0053           X0:
 0053 550000            mov [__r5],0
 0056 550000            mov [__r4],0
 0059           X1:
 0059 5100              mov A,[__r4]
 005B 08                push A
 005C 5100              mov A,[__r5]
 005E 08                push A
 005F 5100              mov A,[__r6]
 0061 08                push A
 0062 5100              mov A,[__r7]
 0064 08                push A
 0065 7C0000            xcall __long2fp
 0068 18                pop A
 0069 5300              mov [__r7],A
 006B 18                pop A
 006C 5300              mov [__r6],A
 006E 18                pop A
 006F 5300              mov [__r5],A
 0071 18                pop A
 0072 5300              mov [__r4],A
 0074 5100              mov A,[__r0]
 0076 08                push A
 0077 5100              mov A,[__r1]
 0079 08                push A
 007A 5100              mov A,[__r2]
 007C 08                push A
 007D 5100              mov A,[__r3]
 007F 08                push A
 0080 5100              mov A,[__r4]
 0082 08                push A
 0083 5100              mov A,[__r5]
 0085 08                push A
 0086 5100              mov A,[__r6]
 0088 08                push A
 0089 5100              mov A,[__r7]
 008B 08                push A
 008C 7C0000            xcall __fpmul
 008F 18                pop A
 0090 5300              mov [__r3],A
 0092 18                pop A
 0093 5300              mov [__r2],A
 0095 18                pop A
 0096 5300              mov [__r1],A
 0098 18                pop A
 0099 5300              mov [__r0],A
 009B 38FC              add SP,-4
 009D 5047              mov A,71
 009F 08                push A
 00A0 5000              mov A,0
 00A2 08                push A
 00A3 08                push A
 00A4 08                push A
 00A5 5100              mov A,[__r0]
 00A7 08                push A
 00A8 5100              mov A,[__r1]
 00AA 08                push A
 00AB 5100              mov A,[__r2]
 00AD 08                push A
 00AE 5100              mov A,[__r3]
 00B0 08                push A
 00B1 7C0000            xcall __fpcmp
 00B4 38F8              add SP,-8
 00B6 39FF              cmp A,-1
 00B8 A047              jz L4
 00BA 5047              mov A,71
 00BC 08                push A
 00BD 5000              mov A,0
 00BF 08                push A
 00C0 08                push A
 00C1 08                push A
 00C2 5100              mov A,[__r0]
 00C4 08                push A
 00C5 5100              mov A,[__r1]
 00C7 08                push A
 00C8 5100              mov A,[__r2]
 00CA 08                push A
 00CB 5100              mov A,[__r3]
 00CD 08                push A
 00CE 7C0000            xcall __fpsub
 00D1 18                pop A
 00D2 5300              mov [__r7],A
 00D4 18                pop A
 00D5 5300              mov [__r6],A
 00D7 18                pop A
 00D8 5300              mov [__r5],A
 00DA 18                pop A
 00DB 38FC              add SP,-4
 00DD 08                push A
 00DE 5100              mov A,[__r5]
 00E0 08                push A
 00E1 5100              mov A,[__r6]
 00E3 08                push A
 00E4 5100              mov A,[__r7]
 00E6 08                push A
 00E7 7C0000            xcall __fp2long
 00EA 18                pop A
 00EB 5300              mov [__r5],A
 00ED 18                pop A
 00EE 5300              mov [__r4],A
 00F0 38FE              add SP,-2
 00F2 5100              mov A,[__r5]
 00F4 0100              add A,0
 00F6 5401              mov [X+1],A
 00F8 5100              mov A,[__r4]
 00FA 0980              adc A,-128
 00FC 5400              mov [X+0],A
 00FE 8020              xjmp L5
 0100           L4:
 0100 5100              mov A,[__r0]
 0102 08                push A
 0103 5100              mov A,[__r1]
 0105 08                push A
 0106 5100              mov A,[__r2]
 0108 08                push A
 0109 5100              mov A,[__r3]
 010B 08                push A
 010C 7C0000            xcall __fp2long
 010F 18                pop A
 0110 5300              mov [__r1],A
 0112 18                pop A
 0113 5300              mov [__r0],A
 0115 38FE              add SP,-2
 0117 5100              mov A,[__r1]
 0119 5401              mov [X+1],A
 011B 5100              mov A,[__r0]
 011D 5400              mov [X+0],A
 011F           L5:
 011F 5201              mov A,[X+1]
 0121 10                push X
 0122 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 0125 20                pop X
 0126                   .dbline -2
 0126           L2:
 0126 38FE              add SP,-2
 0128 20                pop X
 0129                   .dbline 0 ; func end
 0129 7F                ret
 012A                   .dbsym l pulse -5 I
 012A                   .dbend
 012A                   .dbfunc e MoveForward2 _MoveForward2 fV
 012A           ;   kerroinOikea -> X-13
 012A           ;   kerroinVasen -> X-9
 012A           ;          pulse -> X-5
 012A           _MoveForward2::
 012A                   .dbline -1
 012A 10                push X
 012B 4F                mov X,SP
 012C 3804              add SP,4
 012E                   .dbline 41
 012E           ; }
 012E           ; 
 012E           ; //Kulkee eteenpäin arvolla..
 012E           ; void MoveForward2(int pulse, float kerroinVasen, float kerroinOikea)
 012E           ; {                             
 012E                   .dbline 42
 012E           ;       LEFTC_Data_ADDR &= NOLLAA;
 012E 4104F0            and REG[0x4],-16
 0131                   .dbline 42
 0131                   .dbline 43
 0131           ;       LEFTC_Data_ADDR |= FORWARD;
 0131 43040A            or REG[0x4],10
 0134                   .dbline 43
 0134                   .dbline 45
 0134           ; 
 0134           ;       PWM8_VASEN_WritePulseWidth((BYTE)(pulse * kerroinVasen));
 0134 52FC              mov A,[X-4]
 0136 5300              mov [__r3],A
 0138 52FB              mov A,[X-5]
 013A 5300              mov [__r2],A
 013C 470080            tst [__r2],-128
 013F A009              jz X3
 0141 5500FF            mov [__r1],-1
 0144 5500FF            mov [__r0],-1
 0147 8007              jmp X4
 0149           X3:
 0149 550000            mov [__r1],0
 014C 550000            mov [__r0],0
 014F           X4:
 014F 5100              mov A,[__r0]
 0151 08                push A
 0152 5100              mov A,[__r1]
 0154 08                push A
 0155 5100              mov A,[__r2]
 0157 08                push A
 0158 5100              mov A,[__r3]
 015A 08                push A
 015B 7C0000            xcall __long2fp
 015E 18                pop A
 015F 5300              mov [__r3],A
 0161 18                pop A
 0162 5300              mov [__r2],A
 0164 18                pop A
 0165 5300              mov [__r1],A
 0167 18                pop A
 0168 5300              mov [__r0],A
 016A 52F7              mov A,[X-9]
 016C 08                push A
 016D 52F8              mov A,[X-8]
 016F 08                push A
 0170 52F9              mov A,[X-7]
 0172 08                push A
 0173 52FA              mov A,[X-6]
 0175 08                push A
 0176 5100              mov A,[__r0]
 0178 08                push A
 0179 5100              mov A,[__r1]
 017B 08                push A
 017C 5100              mov A,[__r2]
 017E 08                push A
 017F 5100              mov A,[__r3]
 0181 08                push A
 0182 7C0000            xcall __fpmul
 0185 18                pop A
 0186 5300              mov [__r3],A
 0188 18                pop A
 0189 5300              mov [__r2],A
 018B 18                pop A
 018C 5300              mov [__r1],A
 018E 18                pop A
 018F 5300              mov [__r0],A
 0191 38FC              add SP,-4
 0193 5047              mov A,71
 0195 08                push A
 0196 5000              mov A,0
 0198 08                push A
 0199 08                push A
 019A 08                push A
 019B 5100              mov A,[__r0]
 019D 08                push A
 019E 5100              mov A,[__r1]
 01A0 08                push A
 01A1 5100              mov A,[__r2]
 01A3 08                push A
 01A4 5100              mov A,[__r3]
 01A6 08                push A
 01A7 7C0000            xcall __fpcmp
 01AA 38F8              add SP,-8
 01AC 39FF              cmp A,-1
 01AE A047              jz L8
 01B0 5047              mov A,71
 01B2 08                push A
 01B3 5000              mov A,0
 01B5 08                push A
 01B6 08                push A
 01B7 08                push A
 01B8 5100              mov A,[__r0]
 01BA 08                push A
 01BB 5100              mov A,[__r1]
 01BD 08                push A
 01BE 5100              mov A,[__r2]
 01C0 08                push A
 01C1 5100              mov A,[__r3]
 01C3 08                push A
 01C4 7C0000            xcall __fpsub
 01C7 18                pop A
 01C8 5300              mov [__r7],A
 01CA 18                pop A
 01CB 5300              mov [__r6],A
 01CD 18                pop A
 01CE 5300              mov [__r5],A
 01D0 18                pop A
 01D1 38FC              add SP,-4
 01D3 08                push A
 01D4 5100              mov A,[__r5]
 01D6 08                push A
 01D7 5100              mov A,[__r6]
 01D9 08                push A
 01DA 5100              mov A,[__r7]
 01DC 08                push A
 01DD 7C0000            xcall __fp2long
 01E0 18                pop A
 01E1 5300              mov [__r5],A
 01E3 18                pop A
 01E4 5300              mov [__r4],A
 01E6 38FE              add SP,-2
 01E8 5100              mov A,[__r5]
 01EA 0100              add A,0
 01EC 5401              mov [X+1],A
 01EE 5100              mov A,[__r4]
 01F0 0980              adc A,-128
 01F2 5400              mov [X+0],A
 01F4 8020              xjmp L9
 01F6           L8:
 01F6 5100              mov A,[__r0]
 01F8 08                push A
 01F9 5100              mov A,[__r1]
 01FB 08                push A
 01FC 5100              mov A,[__r2]
 01FE 08                push A
 01FF 5100              mov A,[__r3]
 0201 08                push A
 0202 7C0000            xcall __fp2long
 0205 18                pop A
 0206 5300              mov [__r1],A
 0208 18                pop A
 0209 5300              mov [__r0],A
 020B 38FE              add SP,-2
 020D 5100              mov A,[__r1]
 020F 5401              mov [X+1],A
 0211 5100              mov A,[__r0]
 0213 5400              mov [X+0],A
 0215           L9:
 0215 5201              mov A,[X+1]
 0217 10                push X
 0218 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 021B 20                pop X
 021C                   .dbline 46
 021C           ;       PWM8_OIKEA_WritePulseWidth((BYTE)(pulse * kerroinOikea));
 021C 52FC              mov A,[X-4]
 021E 5300              mov [__r3],A
 0220 52FB              mov A,[X-5]
 0222 5300              mov [__r2],A
 0224 470080            tst [__r2],-128
 0227 A009              jz X6
 0229 5500FF            mov [__r1],-1
 022C 5500FF            mov [__r0],-1
 022F 8007              jmp X7
 0231           X6:
 0231 550000            mov [__r1],0
 0234 550000            mov [__r0],0
 0237           X7:
 0237 5100              mov A,[__r0]
 0239 08                push A
 023A 5100              mov A,[__r1]
 023C 08                push A
 023D 5100              mov A,[__r2]
 023F 08                push A
 0240 5100              mov A,[__r3]
 0242 08                push A
 0243 7C0000            xcall __long2fp
 0246 18                pop A
 0247 5300              mov [__r3],A
 0249 18                pop A
 024A 5300              mov [__r2],A
 024C 18                pop A
 024D 5300              mov [__r1],A
 024F 18                pop A
 0250 5300              mov [__r0],A
 0252 52F3              mov A,[X-13]
 0254 08                push A
 0255 52F4              mov A,[X-12]
 0257 08                push A
 0258 52F5              mov A,[X-11]
 025A 08                push A
 025B 52F6              mov A,[X-10]
 025D 08                push A
 025E 5100              mov A,[__r0]
 0260 08                push A
 0261 5100              mov A,[__r1]
 0263 08                push A
 0264 5100              mov A,[__r2]
 0266 08                push A
 0267 5100              mov A,[__r3]
 0269 08                push A
 026A 7C0000            xcall __fpmul
 026D 18                pop A
 026E 5300              mov [__r3],A
 0270 18                pop A
 0271 5300              mov [__r2],A
 0273 18                pop A
 0274 5300              mov [__r1],A
 0276 18                pop A
 0277 5300              mov [__r0],A
 0279 38FC              add SP,-4
 027B 5047              mov A,71
 027D 08                push A
 027E 5000              mov A,0
 0280 08                push A
 0281 08                push A
 0282 08                push A
 0283 5100              mov A,[__r0]
 0285 08                push A
 0286 5100              mov A,[__r1]
 0288 08                push A
 0289 5100              mov A,[__r2]
 028B 08                push A
 028C 5100              mov A,[__r3]
 028E 08                push A
 028F 7C0000            xcall __fpcmp
 0292 38F8              add SP,-8
 0294 39FF              cmp A,-1
 0296 A047              jz L11
 0298 5047              mov A,71
 029A 08                push A
 029B 5000              mov A,0
 029D 08                push A
 029E 08                push A
 029F 08                push A
 02A0 5100              mov A,[__r0]
 02A2 08                push A
 02A3 5100              mov A,[__r1]
 02A5 08                push A
 02A6 5100              mov A,[__r2]
 02A8 08                push A
 02A9 5100              mov A,[__r3]
 02AB 08                push A
 02AC 7C0000            xcall __fpsub
 02AF 18                pop A
 02B0 5300              mov [__r7],A
 02B2 18                pop A
 02B3 5300              mov [__r6],A
 02B5 18                pop A
 02B6 5300              mov [__r5],A
 02B8 18                pop A
 02B9 38FC              add SP,-4
 02BB 08                push A
 02BC 5100              mov A,[__r5]
 02BE 08                push A
 02BF 5100              mov A,[__r6]
 02C1 08                push A
 02C2 5100              mov A,[__r7]
 02C4 08                push A
 02C5 7C0000            xcall __fp2long
 02C8 18                pop A
 02C9 5300              mov [__r5],A
 02CB 18                pop A
 02CC 5300              mov [__r4],A
 02CE 38FE              add SP,-2
 02D0 5100              mov A,[__r5]
 02D2 0100              add A,0
 02D4 5403              mov [X+3],A
 02D6 5100              mov A,[__r4]
 02D8 0980              adc A,-128
 02DA 5402              mov [X+2],A
 02DC 8020              xjmp L12
 02DE           L11:
 02DE 5100              mov A,[__r0]
 02E0 08                push A
 02E1 5100              mov A,[__r1]
 02E3 08                push A
 02E4 5100              mov A,[__r2]
 02E6 08                push A
 02E7 5100              mov A,[__r3]
 02E9 08                push A
 02EA 7C0000            xcall __fp2long
 02ED 18                pop A
 02EE 5300              mov [__r1],A
 02F0 18                pop A
 02F1 5300              mov [__r0],A
 02F3 38FE              add SP,-2
 02F5 5100              mov A,[__r1]
 02F7 5403              mov [X+3],A
 02F9 5100              mov A,[__r0]
 02FB 5402              mov [X+2],A
 02FD           L12:
 02FD 5203              mov A,[X+3]
 02FF 10                push X
 0300 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 0303 20                pop X
 0304                   .dbline -2
 0304           L6:
 0304 38FC              add SP,-4
 0306 20                pop X
 0307                   .dbline 0 ; func end
 0307 7F                ret
 0308                   .dbsym l kerroinOikea -13 D
 0308                   .dbsym l kerroinVasen -9 D
 0308                   .dbsym l pulse -5 I
 0308                   .dbend
 0308                   .dbfunc e MoveBackward _MoveBackward fV
 0308           ;          pulse -> X-5
 0308           _MoveBackward::
 0308                   .dbline -1
 0308 10                push X
 0309 4F                mov X,SP
 030A                   .dbline 51
 030A           ; }
 030A           ; 
 030A           ; //Kulkee taaksepäin arvolla
 030A           ; void MoveBackward(int pulse)
 030A           ; {
 030A                   .dbline 52
 030A           ;       LEFTC_Data_ADDR &= NOLLAA;
 030A 4104F0            and REG[0x4],-16
 030D                   .dbline 52
 030D                   .dbline 53
 030D           ;       LEFTC_Data_ADDR |= BACKWARD;
 030D 430405            or REG[0x4],5
 0310                   .dbline 53
 0310                   .dbline 55
 0310           ;       
 0310           ;       PWM8_VASEN_WritePulseWidth((BYTE)pulse);
 0310 52FC              mov A,[X-4]
 0312 10                push X
 0313 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 0316 20                pop X
 0317                   .dbline 56
 0317           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 0317 52FC              mov A,[X-4]
 0319 10                push X
 031A 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 031D 20                pop X
 031E                   .dbline -2
 031E           L13:
 031E 20                pop X
 031F                   .dbline 0 ; func end
 031F 7F                ret
 0320                   .dbsym l pulse -5 I
 0320                   .dbend
 0320                   .dbfunc e Stop _Stop fV
 0320           _Stop::
 0320                   .dbline -1
 0320                   .dbline 61
 0320           ; }
 0320           ; 
 0320           ; //Pysäyttää Moottorit
 0320           ; void Stop(void)
 0320           ; {
 0320                   .dbline 62
 0320           ;       PWM8_OIKEA_WritePulseWidth(0);
 0320 10                push X
 0321 5000              mov A,0
 0323 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 0326                   .dbline 63
 0326           ;       PWM8_VASEN_WritePulseWidth(0);
 0326 5000              mov A,0
 0328 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 032B 20                pop X
 032C                   .dbline 65
 032C           ;       
 032C           ;       LEFTC_Data_ADDR &= NOLLAA;
 032C 4104F0            and REG[0x4],-16
 032F                   .dbline 65
 032F                   .dbline -2
 032F           L14:
 032F                   .dbline 0 ; func end
 032F 7F                ret
 0330                   .dbend
 0330                   .dbfunc e TurnLeft _TurnLeft fV
 0330           ;          pulse -> X-5
 0330           _TurnLeft::
 0330                   .dbline -1
 0330 10                push X
 0331 4F                mov X,SP
 0332                   .dbline 70
 0332           ; }
 0332           ; 
 0332           ; //Kääntyy vasemmalle
 0332           ; void TurnLeft(int pulse)
 0332           ; {
 0332                   .dbline 71
 0332           ;       LEFTC_Data_ADDR &= NOLLAA;
 0332 4104F0            and REG[0x4],-16
 0335                   .dbline 71
 0335                   .dbline 72
 0335           ;       LEFTC_Data_ADDR |= LEFTFRIGHTB
 0335 430406            or REG[0x4],6
 0338                   .dbline 74
 0338           ;               
 0338           ;       PWM8_VASEN_WritePulseWidth((BYTE)pulse);
 0338 52FC              mov A,[X-4]
 033A 10                push X
 033B 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 033E 20                pop X
 033F                   .dbline 75
 033F           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 033F 52FC              mov A,[X-4]
 0341 10                push X
 0342 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 0345 20                pop X
 0346                   .dbline -2
 0346           L15:
 0346 20                pop X
 0347                   .dbline 0 ; func end
 0347 7F                ret
 0348                   .dbsym l pulse -5 I
 0348                   .dbend
 0348                   .dbfunc e TurnRight _TurnRight fV
 0348           ;          pulse -> X-5
 0348           _TurnRight::
 0348                   .dbline -1
 0348 10                push X
 0349 4F                mov X,SP
 034A                   .dbline 80
 034A           ; }
 034A           ; 
 034A           ; //Kääntyy oikealle
 034A           ; void TurnRight(int pulse)
 034A           ; {             
 034A                   .dbline 81
 034A           ;       LEFTC_Data_ADDR &= NOLLAA;
 034A 4104F0            and REG[0x4],-16
 034D                   .dbline 81
 034D                   .dbline 82
 034D           ;       LEFTC_Data_ADDR |= LEFTBRIGHTF;
 034D 430409            or REG[0x4],9
 0350                   .dbline 82
 0350                   .dbline 84
 0350           ;       
 0350           ;       PWM8_VASEN_WritePulseWidth((BYTE)pulse);
 0350 52FC              mov A,[X-4]
 0352 10                push X
 0353 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 0356 20                pop X
 0357                   .dbline 85
 0357           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 0357 52FC              mov A,[X-4]
 0359 10                push X
 035A 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 035D 20                pop X
 035E                   .dbline -2
 035E           L16:
 035E 20                pop X
 035F                   .dbline 0 ; func end
 035F 7F                ret
 0360                   .dbsym l pulse -5 I
 0360                   .dbend
 0360                   .dbfunc e TestTurnLeft _TestTurnLeft fV
 0360           ;          pulse -> X-5
 0360           _TestTurnLeft::
 0360                   .dbline -1
 0360 10                push X
 0361 4F                mov X,SP
 0362                   .dbline 91
 0362           ; }
 0362           ; 
 0362           ; 
 0362           ; //TEST LEFTTURN
 0362           ; void TestTurnLeft(int pulse)
 0362           ; {
 0362                   .dbline 92
 0362           ;       LEFTC_Data_ADDR &= NOLLAA;
 0362 4104F0            and REG[0x4],-16
 0365                   .dbline 92
 0365                   .dbline 93
 0365           ;       LEFTC_Data_ADDR |= 0b00000001;
 0365 430401            or REG[0x4],1
 0368                   .dbline 95
 0368           ;       
 0368           ;       PWM8_VASEN_WritePulseWidth(0);
 0368 10                push X
 0369 5000              mov A,0
 036B 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 036E 20                pop X
 036F                   .dbline 96
 036F           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 036F 52FC              mov A,[X-4]
 0371 10                push X
 0372 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 0375 20                pop X
 0376                   .dbline -2
 0376           L17:
 0376 20                pop X
 0377                   .dbline 0 ; func end
 0377 7F                ret
 0378                   .dbsym l pulse -5 I
 0378                   .dbend
