                        .module motorcontrol.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./motorcontrol.c
                        .area lit(rom, con, rel, lit)
 0000           _OIKEUSKERROIN::
 0000 3F4CCCCD          .word 0x3f4c,0xcccd
 0004                   .dbfile C:\Users\Kaxxo\DOCUME~1\Robor7\ROBOTT~1\ROBOTT~1\motorcontrol.c
 0004                   .dbsym e OIKEUSKERROIN _OIKEUSKERROIN kD
                        .area text(rom, con, rel)
 0000                   .dbfile C:\Users\Kaxxo\DOCUME~1\Robor7\ROBOTT~1\ROBOTT~1\motorcontrol.c
 0000                   .dbfunc e InitPWM _InitPWM fV
 0000           _InitPWM::
 0000                   .dbline -1
 0000                   .dbline 21
 0000           ; #include <m8c.h>        // part specific constants and macros
 0000           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0000           ; 
 0000           ; #define FORWARD 0b00000101; // Molemmat Eteen
 0000           ; #define BACKWARD 0b00001010; //Molemmat Taakse
 0000           ; #define LEFTFRIGHTB 0b00001001; // Vasen Eteen Oikea Taakse
 0000           ; #define LEFTBRIGHTF 0b00000110; // Vasen Taakse Oikea Eteen
 0000           ; #define NOLLAA 0b11110000;            //Molemmat C/D pinnit 0
 0000           ; BYTE Port1_Data_ADDR; //Port1 Data Osoite 
 0000           ; 
 0000           ; //Porttien osoitteet
 0000           ; //Port1_0 LEFTC      C = 1, D = 0 FORWARD
 0000           ; //Port1_1 LEFTD                C = 0, D = 1 BACKWARD 
 0000           ; //Port1_2 RIGHTC
 0000           ; //Port1_3 RIGHTD
 0000           ; 
 0000           ; const float OIKEUSKERROIN = 0.8f; //Kerroin vasemalle puolelle jotta robotti kulkisi suoraan
 0000           ; 
 0000           ; //K채ynnist채채 PWM Moduulit
 0000           ; void InitPWM()
 0000           ; {
 0000                   .dbline 22
 0000           ;       PWM8_VASEN_Start();
 0000 10                push X
 0001 7C0000            xcall _PWM8_VASEN_Start
 0004                   .dbline 23
 0004           ;       PWM8_OIKEA_Start();
 0004 7C0000            xcall _PWM8_OIKEA_Start
 0007 20                pop X
 0008                   .dbline 25
 0008           ;       
 0008           ;       Port1_Data_ADDR = LEFTC_Data_ADDR;
 0008 5D04              mov A,REG[0x4]
 000A 5300              mov [_Port1_Data_ADDR],A
 000C                   .dbline 26
 000C           ;       Port1_Data_ADDR &= NOLLAA;
 000C 2600F0            and [_Port1_Data_ADDR],-16
 000F                   .dbline 26
 000F                   .dbline -2
 000F           L1:
 000F                   .dbline 0 ; func end
 000F 7F                ret
 0010                   .dbend
 0010                   .dbfunc e MoveForward _MoveForward fV
 0010           ;          pulse -> X-5
 0010           _MoveForward::
 0010                   .dbline -1
 0010 10                push X
 0011 4F                mov X,SP
 0012 3802              add SP,2
 0014                   .dbline 31
 0014           ; }
 0014           ; 
 0014           ; //Kulkee eteenp채in arvolla..
 0014           ; void MoveForward(int pulse)
 0014           ; {                             
 0014                   .dbline 32
 0014           ;       Port1_Data_ADDR &= NOLLAA;
 0014 2600F0            and [_Port1_Data_ADDR],-16
 0017                   .dbline 32
 0017                   .dbline 33
 0017           ;       Port1_Data_ADDR |= FORWARD;
 0017 2E0005            or [_Port1_Data_ADDR],5
 001A                   .dbline 33
 001A                   .dbline 35
 001A           ; 
 001A           ;       PWM8_VASEN_WritePulseWidth((BYTE)(pulse * OIKEUSKERROIN));
 001A 550000            mov [__r1],<_OIKEUSKERROIN
 001D 5000              mov A,>_OIKEUSKERROIN
 001F 10                push X
 0020 5800              mov X,[__r1]
 0022 08                push A
 0023 28                romx
 0024 5300              mov [__r0],A
 0026 18                pop A
 0027 75                inc X
 0028 0900              adc A,0
 002A 08                push A
 002B 28                romx
 002C 5300              mov [__r1],A
 002E 18                pop A
 002F 75                inc X
 0030 0900              adc A,0
 0032 08                push A
 0033 28                romx
 0034 5300              mov [__r2],A
 0036 18                pop A
 0037 75                inc X
 0038 0900              adc A,0
 003A 28                romx
 003B 5300              mov [__r3],A
 003D 20                pop X
 003E 52FC              mov A,[X-4]
 0040 5300              mov [__r7],A
 0042 52FB              mov A,[X-5]
 0044 5300              mov [__r6],A
 0046 470080            tst [__r6],-128
 0049 A009              jz X0
 004B 5500FF            mov [__r5],-1
 004E 5500FF            mov [__r4],-1
 0051 8007              jmp X1
 0053           X0:
 0053 550000            mov [__r5],0
 0056 550000            mov [__r4],0
 0059           X1:
 0059 5100              mov A,[__r4]
 005B 08                push A
 005C 5100              mov A,[__r5]
 005E 08                push A
 005F 5100              mov A,[__r6]
 0061 08                push A
 0062 5100              mov A,[__r7]
 0064 08                push A
 0065 7C0000            xcall __long2fp
 0068 18                pop A
 0069 5300              mov [__r7],A
 006B 18                pop A
 006C 5300              mov [__r6],A
 006E 18                pop A
 006F 5300              mov [__r5],A
 0071 18                pop A
 0072 5300              mov [__r4],A
 0074 5100              mov A,[__r0]
 0076 08                push A
 0077 5100              mov A,[__r1]
 0079 08                push A
 007A 5100              mov A,[__r2]
 007C 08                push A
 007D 5100              mov A,[__r3]
 007F 08                push A
 0080 5100              mov A,[__r4]
 0082 08                push A
 0083 5100              mov A,[__r5]
 0085 08                push A
 0086 5100              mov A,[__r6]
 0088 08                push A
 0089 5100              mov A,[__r7]
 008B 08                push A
 008C 7C0000            xcall __fpmul
 008F 18                pop A
 0090 5300              mov [__r3],A
 0092 18                pop A
 0093 5300              mov [__r2],A
 0095 18                pop A
 0096 5300              mov [__r1],A
 0098 18                pop A
 0099 5300              mov [__r0],A
 009B 38FC              add SP,-4
 009D 5047              mov A,71
 009F 08                push A
 00A0 5000              mov A,0
 00A2 08                push A
 00A3 08                push A
 00A4 08                push A
 00A5 5100              mov A,[__r0]
 00A7 08                push A
 00A8 5100              mov A,[__r1]
 00AA 08                push A
 00AB 5100              mov A,[__r2]
 00AD 08                push A
 00AE 5100              mov A,[__r3]
 00B0 08                push A
 00B1 7C0000            xcall __fpcmp
 00B4 38F8              add SP,-8
 00B6 39FF              cmp A,-1
 00B8 A047              jz L4
 00BA 5047              mov A,71
 00BC 08                push A
 00BD 5000              mov A,0
 00BF 08                push A
 00C0 08                push A
 00C1 08                push A
 00C2 5100              mov A,[__r0]
 00C4 08                push A
 00C5 5100              mov A,[__r1]
 00C7 08                push A
 00C8 5100              mov A,[__r2]
 00CA 08                push A
 00CB 5100              mov A,[__r3]
 00CD 08                push A
 00CE 7C0000            xcall __fpsub
 00D1 18                pop A
 00D2 5300              mov [__r7],A
 00D4 18                pop A
 00D5 5300              mov [__r6],A
 00D7 18                pop A
 00D8 5300              mov [__r5],A
 00DA 18                pop A
 00DB 38FC              add SP,-4
 00DD 08                push A
 00DE 5100              mov A,[__r5]
 00E0 08                push A
 00E1 5100              mov A,[__r6]
 00E3 08                push A
 00E4 5100              mov A,[__r7]
 00E6 08                push A
 00E7 7C0000            xcall __fp2long
 00EA 18                pop A
 00EB 5300              mov [__r5],A
 00ED 18                pop A
 00EE 5300              mov [__r4],A
 00F0 38FE              add SP,-2
 00F2 5100              mov A,[__r5]
 00F4 0100              add A,0
 00F6 5401              mov [X+1],A
 00F8 5100              mov A,[__r4]
 00FA 0980              adc A,-128
 00FC 5400              mov [X+0],A
 00FE 8020              xjmp L5
 0100           L4:
 0100 5100              mov A,[__r0]
 0102 08                push A
 0103 5100              mov A,[__r1]
 0105 08                push A
 0106 5100              mov A,[__r2]
 0108 08                push A
 0109 5100              mov A,[__r3]
 010B 08                push A
 010C 7C0000            xcall __fp2long
 010F 18                pop A
 0110 5300              mov [__r1],A
 0112 18                pop A
 0113 5300              mov [__r0],A
 0115 38FE              add SP,-2
 0117 5100              mov A,[__r1]
 0119 5401              mov [X+1],A
 011B 5100              mov A,[__r0]
 011D 5400              mov [X+0],A
 011F           L5:
 011F 5201              mov A,[X+1]
 0121 10                push X
 0122 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 0125 20                pop X
 0126                   .dbline 36
 0126           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 0126 52FC              mov A,[X-4]
 0128 10                push X
 0129 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 012C 20                pop X
 012D                   .dbline -2
 012D           L2:
 012D 38FE              add SP,-2
 012F 20                pop X
 0130                   .dbline 0 ; func end
 0130 7F                ret
 0131                   .dbsym l pulse -5 I
 0131                   .dbend
 0131                   .dbfunc e MoveBackward _MoveBackward fV
 0131           ;          pulse -> X-5
 0131           _MoveBackward::
 0131                   .dbline -1
 0131 10                push X
 0132 4F                mov X,SP
 0133 3802              add SP,2
 0135                   .dbline 41
 0135           ; }
 0135           ; 
 0135           ; //Kulkee taaksep채in arvolla
 0135           ; void MoveBackward(int pulse)
 0135           ; {
 0135                   .dbline 42
 0135           ;       Port1_Data_ADDR &= NOLLAA;
 0135 2600F0            and [_Port1_Data_ADDR],-16
 0138                   .dbline 42
 0138                   .dbline 43
 0138           ;       Port1_Data_ADDR |= BACKWARD;
 0138 2E000A            or [_Port1_Data_ADDR],10
 013B                   .dbline 43
 013B                   .dbline 45
 013B           ;       
 013B           ;       PWM8_VASEN_WritePulseWidth((BYTE)(pulse * OIKEUSKERROIN));
 013B 550000            mov [__r1],<_OIKEUSKERROIN
 013E 5000              mov A,>_OIKEUSKERROIN
 0140 10                push X
 0141 5800              mov X,[__r1]
 0143 08                push A
 0144 28                romx
 0145 5300              mov [__r0],A
 0147 18                pop A
 0148 75                inc X
 0149 0900              adc A,0
 014B 08                push A
 014C 28                romx
 014D 5300              mov [__r1],A
 014F 18                pop A
 0150 75                inc X
 0151 0900              adc A,0
 0153 08                push A
 0154 28                romx
 0155 5300              mov [__r2],A
 0157 18                pop A
 0158 75                inc X
 0159 0900              adc A,0
 015B 28                romx
 015C 5300              mov [__r3],A
 015E 20                pop X
 015F 52FC              mov A,[X-4]
 0161 5300              mov [__r7],A
 0163 52FB              mov A,[X-5]
 0165 5300              mov [__r6],A
 0167 470080            tst [__r6],-128
 016A A009              jz X3
 016C 5500FF            mov [__r5],-1
 016F 5500FF            mov [__r4],-1
 0172 8007              jmp X4
 0174           X3:
 0174 550000            mov [__r5],0
 0177 550000            mov [__r4],0
 017A           X4:
 017A 5100              mov A,[__r4]
 017C 08                push A
 017D 5100              mov A,[__r5]
 017F 08                push A
 0180 5100              mov A,[__r6]
 0182 08                push A
 0183 5100              mov A,[__r7]
 0185 08                push A
 0186 7C0000            xcall __long2fp
 0189 18                pop A
 018A 5300              mov [__r7],A
 018C 18                pop A
 018D 5300              mov [__r6],A
 018F 18                pop A
 0190 5300              mov [__r5],A
 0192 18                pop A
 0193 5300              mov [__r4],A
 0195 5100              mov A,[__r0]
 0197 08                push A
 0198 5100              mov A,[__r1]
 019A 08                push A
 019B 5100              mov A,[__r2]
 019D 08                push A
 019E 5100              mov A,[__r3]
 01A0 08                push A
 01A1 5100              mov A,[__r4]
 01A3 08                push A
 01A4 5100              mov A,[__r5]
 01A6 08                push A
 01A7 5100              mov A,[__r6]
 01A9 08                push A
 01AA 5100              mov A,[__r7]
 01AC 08                push A
 01AD 7C0000            xcall __fpmul
 01B0 18                pop A
 01B1 5300              mov [__r3],A
 01B3 18                pop A
 01B4 5300              mov [__r2],A
 01B6 18                pop A
 01B7 5300              mov [__r1],A
 01B9 18                pop A
 01BA 5300              mov [__r0],A
 01BC 38FC              add SP,-4
 01BE 5047              mov A,71
 01C0 08                push A
 01C1 5000              mov A,0
 01C3 08                push A
 01C4 08                push A
 01C5 08                push A
 01C6 5100              mov A,[__r0]
 01C8 08                push A
 01C9 5100              mov A,[__r1]
 01CB 08                push A
 01CC 5100              mov A,[__r2]
 01CE 08                push A
 01CF 5100              mov A,[__r3]
 01D1 08                push A
 01D2 7C0000            xcall __fpcmp
 01D5 38F8              add SP,-8
 01D7 39FF              cmp A,-1
 01D9 A047              jz L8
 01DB 5047              mov A,71
 01DD 08                push A
 01DE 5000              mov A,0
 01E0 08                push A
 01E1 08                push A
 01E2 08                push A
 01E3 5100              mov A,[__r0]
 01E5 08                push A
 01E6 5100              mov A,[__r1]
 01E8 08                push A
 01E9 5100              mov A,[__r2]
 01EB 08                push A
 01EC 5100              mov A,[__r3]
 01EE 08                push A
 01EF 7C0000            xcall __fpsub
 01F2 18                pop A
 01F3 5300              mov [__r7],A
 01F5 18                pop A
 01F6 5300              mov [__r6],A
 01F8 18                pop A
 01F9 5300              mov [__r5],A
 01FB 18                pop A
 01FC 38FC              add SP,-4
 01FE 08                push A
 01FF 5100              mov A,[__r5]
 0201 08                push A
 0202 5100              mov A,[__r6]
 0204 08                push A
 0205 5100              mov A,[__r7]
 0207 08                push A
 0208 7C0000            xcall __fp2long
 020B 18                pop A
 020C 5300              mov [__r5],A
 020E 18                pop A
 020F 5300              mov [__r4],A
 0211 38FE              add SP,-2
 0213 5100              mov A,[__r5]
 0215 0100              add A,0
 0217 5401              mov [X+1],A
 0219 5100              mov A,[__r4]
 021B 0980              adc A,-128
 021D 5400              mov [X+0],A
 021F 8020              xjmp L9
 0221           L8:
 0221 5100              mov A,[__r0]
 0223 08                push A
 0224 5100              mov A,[__r1]
 0226 08                push A
 0227 5100              mov A,[__r2]
 0229 08                push A
 022A 5100              mov A,[__r3]
 022C 08                push A
 022D 7C0000            xcall __fp2long
 0230 18                pop A
 0231 5300              mov [__r1],A
 0233 18                pop A
 0234 5300              mov [__r0],A
 0236 38FE              add SP,-2
 0238 5100              mov A,[__r1]
 023A 5401              mov [X+1],A
 023C 5100              mov A,[__r0]
 023E 5400              mov [X+0],A
 0240           L9:
 0240 5201              mov A,[X+1]
 0242 10                push X
 0243 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 0246 20                pop X
 0247                   .dbline 46
 0247           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 0247 52FC              mov A,[X-4]
 0249 10                push X
 024A 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 024D 20                pop X
 024E                   .dbline -2
 024E           L6:
 024E 38FE              add SP,-2
 0250 20                pop X
 0251                   .dbline 0 ; func end
 0251 7F                ret
 0252                   .dbsym l pulse -5 I
 0252                   .dbend
 0252                   .dbfunc e Stop _Stop fV
 0252           _Stop::
 0252                   .dbline -1
 0252                   .dbline 51
 0252           ; }
 0252           ; 
 0252           ; //Pys채ytt채채 Moottorit
 0252           ; void Stop()
 0252           ; {
 0252                   .dbline 52
 0252           ;       PWM8_OIKEA_WritePulseWidth(0);
 0252 10                push X
 0253 5000              mov A,0
 0255 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 0258                   .dbline 53
 0258           ;       PWM8_VASEN_WritePulseWidth(0);
 0258 5000              mov A,0
 025A 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 025D 20                pop X
 025E                   .dbline 55
 025E           ;       
 025E           ;       Port1_Data_ADDR &= NOLLAA;
 025E 2600F0            and [_Port1_Data_ADDR],-16
 0261                   .dbline 55
 0261                   .dbline -2
 0261           L10:
 0261                   .dbline 0 ; func end
 0261 7F                ret
 0262                   .dbend
 0262                   .dbfunc e TurnLeft _TurnLeft fV
 0262           ;          pulse -> X-5
 0262           _TurnLeft::
 0262                   .dbline -1
 0262 10                push X
 0263 4F                mov X,SP
 0264 3802              add SP,2
 0266                   .dbline 60
 0266           ; }
 0266           ; 
 0266           ; //K채채ntyy vasemmalle
 0266           ; void TurnLeft(int pulse)
 0266           ; {
 0266                   .dbline 61
 0266           ;       Port1_Data_ADDR &= NOLLAA;
 0266 2600F0            and [_Port1_Data_ADDR],-16
 0269                   .dbline 61
 0269                   .dbline 62
 0269           ;       Port1_Data_ADDR |= LEFTBRIGHTF
 0269 2E0006            or [_Port1_Data_ADDR],6
 026C                   .dbline 64
 026C           ;               
 026C           ;       PWM8_VASEN_WritePulseWidth((BYTE)(pulse * OIKEUSKERROIN));
 026C 550000            mov [__r1],<_OIKEUSKERROIN
 026F 5000              mov A,>_OIKEUSKERROIN
 0271 10                push X
 0272 5800              mov X,[__r1]
 0274 08                push A
 0275 28                romx
 0276 5300              mov [__r0],A
 0278 18                pop A
 0279 75                inc X
 027A 0900              adc A,0
 027C 08                push A
 027D 28                romx
 027E 5300              mov [__r1],A
 0280 18                pop A
 0281 75                inc X
 0282 0900              adc A,0
 0284 08                push A
 0285 28                romx
 0286 5300              mov [__r2],A
 0288 18                pop A
 0289 75                inc X
 028A 0900              adc A,0
 028C 28                romx
 028D 5300              mov [__r3],A
 028F 20                pop X
 0290 52FC              mov A,[X-4]
 0292 5300              mov [__r7],A
 0294 52FB              mov A,[X-5]
 0296 5300              mov [__r6],A
 0298 470080            tst [__r6],-128
 029B A009              jz X6
 029D 5500FF            mov [__r5],-1
 02A0 5500FF            mov [__r4],-1
 02A3 8007              jmp X7
 02A5           X6:
 02A5 550000            mov [__r5],0
 02A8 550000            mov [__r4],0
 02AB           X7:
 02AB 5100              mov A,[__r4]
 02AD 08                push A
 02AE 5100              mov A,[__r5]
 02B0 08                push A
 02B1 5100              mov A,[__r6]
 02B3 08                push A
 02B4 5100              mov A,[__r7]
 02B6 08                push A
 02B7 7C0000            xcall __long2fp
 02BA 18                pop A
 02BB 5300              mov [__r7],A
 02BD 18                pop A
 02BE 5300              mov [__r6],A
 02C0 18                pop A
 02C1 5300              mov [__r5],A
 02C3 18                pop A
 02C4 5300              mov [__r4],A
 02C6 5100              mov A,[__r0]
 02C8 08                push A
 02C9 5100              mov A,[__r1]
 02CB 08                push A
 02CC 5100              mov A,[__r2]
 02CE 08                push A
 02CF 5100              mov A,[__r3]
 02D1 08                push A
 02D2 5100              mov A,[__r4]
 02D4 08                push A
 02D5 5100              mov A,[__r5]
 02D7 08                push A
 02D8 5100              mov A,[__r6]
 02DA 08                push A
 02DB 5100              mov A,[__r7]
 02DD 08                push A
 02DE 7C0000            xcall __fpmul
 02E1 18                pop A
 02E2 5300              mov [__r3],A
 02E4 18                pop A
 02E5 5300              mov [__r2],A
 02E7 18                pop A
 02E8 5300              mov [__r1],A
 02EA 18                pop A
 02EB 5300              mov [__r0],A
 02ED 38FC              add SP,-4
 02EF 5047              mov A,71
 02F1 08                push A
 02F2 5000              mov A,0
 02F4 08                push A
 02F5 08                push A
 02F6 08                push A
 02F7 5100              mov A,[__r0]
 02F9 08                push A
 02FA 5100              mov A,[__r1]
 02FC 08                push A
 02FD 5100              mov A,[__r2]
 02FF 08                push A
 0300 5100              mov A,[__r3]
 0302 08                push A
 0303 7C0000            xcall __fpcmp
 0306 38F8              add SP,-8
 0308 39FF              cmp A,-1
 030A A047              jz L13
 030C 5047              mov A,71
 030E 08                push A
 030F 5000              mov A,0
 0311 08                push A
 0312 08                push A
 0313 08                push A
 0314 5100              mov A,[__r0]
 0316 08                push A
 0317 5100              mov A,[__r1]
 0319 08                push A
 031A 5100              mov A,[__r2]
 031C 08                push A
 031D 5100              mov A,[__r3]
 031F 08                push A
 0320 7C0000            xcall __fpsub
 0323 18                pop A
 0324 5300              mov [__r7],A
 0326 18                pop A
 0327 5300              mov [__r6],A
 0329 18                pop A
 032A 5300              mov [__r5],A
 032C 18                pop A
 032D 38FC              add SP,-4
 032F 08                push A
 0330 5100              mov A,[__r5]
 0332 08                push A
 0333 5100              mov A,[__r6]
 0335 08                push A
 0336 5100              mov A,[__r7]
 0338 08                push A
 0339 7C0000            xcall __fp2long
 033C 18                pop A
 033D 5300              mov [__r5],A
 033F 18                pop A
 0340 5300              mov [__r4],A
 0342 38FE              add SP,-2
 0344 5100              mov A,[__r5]
 0346 0100              add A,0
 0348 5401              mov [X+1],A
 034A 5100              mov A,[__r4]
 034C 0980              adc A,-128
 034E 5400              mov [X+0],A
 0350 8020              xjmp L14
 0352           L13:
 0352 5100              mov A,[__r0]
 0354 08                push A
 0355 5100              mov A,[__r1]
 0357 08                push A
 0358 5100              mov A,[__r2]
 035A 08                push A
 035B 5100              mov A,[__r3]
 035D 08                push A
 035E 7C0000            xcall __fp2long
 0361 18                pop A
 0362 5300              mov [__r1],A
 0364 18                pop A
 0365 5300              mov [__r0],A
 0367 38FE              add SP,-2
 0369 5100              mov A,[__r1]
 036B 5401              mov [X+1],A
 036D 5100              mov A,[__r0]
 036F 5400              mov [X+0],A
 0371           L14:
 0371 5201              mov A,[X+1]
 0373 10                push X
 0374 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 0377 20                pop X
 0378                   .dbline 65
 0378           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 0378 52FC              mov A,[X-4]
 037A 10                push X
 037B 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 037E 20                pop X
 037F                   .dbline -2
 037F           L11:
 037F 38FE              add SP,-2
 0381 20                pop X
 0382                   .dbline 0 ; func end
 0382 7F                ret
 0383                   .dbsym l pulse -5 I
 0383                   .dbend
 0383                   .dbfunc e TurnRight _TurnRight fV
 0383           ;          pulse -> X-5
 0383           _TurnRight::
 0383                   .dbline -1
 0383 10                push X
 0384 4F                mov X,SP
 0385 3802              add SP,2
 0387                   .dbline 70
 0387           ; }
 0387           ; 
 0387           ; //K채채ntyy oikealle
 0387           ; void TurnRight(int pulse)
 0387           ; {             
 0387                   .dbline 71
 0387           ;       Port1_Data_ADDR &= NOLLAA;
 0387 2600F0            and [_Port1_Data_ADDR],-16
 038A                   .dbline 71
 038A                   .dbline 72
 038A           ;       Port1_Data_ADDR |= LEFTFRIGHTB;
 038A 2E0009            or [_Port1_Data_ADDR],9
 038D                   .dbline 72
 038D                   .dbline 74
 038D           ;       
 038D           ;       PWM8_VASEN_WritePulseWidth((BYTE)(pulse * OIKEUSKERROIN));
 038D 550000            mov [__r1],<_OIKEUSKERROIN
 0390 5000              mov A,>_OIKEUSKERROIN
 0392 10                push X
 0393 5800              mov X,[__r1]
 0395 08                push A
 0396 28                romx
 0397 5300              mov [__r0],A
 0399 18                pop A
 039A 75                inc X
 039B 0900              adc A,0
 039D 08                push A
 039E 28                romx
 039F 5300              mov [__r1],A
 03A1 18                pop A
 03A2 75                inc X
 03A3 0900              adc A,0
 03A5 08                push A
 03A6 28                romx
 03A7 5300              mov [__r2],A
 03A9 18                pop A
 03AA 75                inc X
 03AB 0900              adc A,0
 03AD 28                romx
 03AE 5300              mov [__r3],A
 03B0 20                pop X
 03B1 52FC              mov A,[X-4]
 03B3 5300              mov [__r7],A
 03B5 52FB              mov A,[X-5]
 03B7 5300              mov [__r6],A
 03B9 470080            tst [__r6],-128
 03BC A009              jz X9
 03BE 5500FF            mov [__r5],-1
 03C1 5500FF            mov [__r4],-1
 03C4 8007              jmp X10
 03C6           X9:
 03C6 550000            mov [__r5],0
 03C9 550000            mov [__r4],0
 03CC           X10:
 03CC 5100              mov A,[__r4]
 03CE 08                push A
 03CF 5100              mov A,[__r5]
 03D1 08                push A
 03D2 5100              mov A,[__r6]
 03D4 08                push A
 03D5 5100              mov A,[__r7]
 03D7 08                push A
 03D8 7C0000            xcall __long2fp
 03DB 18                pop A
 03DC 5300              mov [__r7],A
 03DE 18                pop A
 03DF 5300              mov [__r6],A
 03E1 18                pop A
 03E2 5300              mov [__r5],A
 03E4 18                pop A
 03E5 5300              mov [__r4],A
 03E7 5100              mov A,[__r0]
 03E9 08                push A
 03EA 5100              mov A,[__r1]
 03EC 08                push A
 03ED 5100              mov A,[__r2]
 03EF 08                push A
 03F0 5100              mov A,[__r3]
 03F2 08                push A
 03F3 5100              mov A,[__r4]
 03F5 08                push A
 03F6 5100              mov A,[__r5]
 03F8 08                push A
 03F9 5100              mov A,[__r6]
 03FB 08                push A
 03FC 5100              mov A,[__r7]
 03FE 08                push A
 03FF 7C0000            xcall __fpmul
 0402 18                pop A
 0403 5300              mov [__r3],A
 0405 18                pop A
 0406 5300              mov [__r2],A
 0408 18                pop A
 0409 5300              mov [__r1],A
 040B 18                pop A
 040C 5300              mov [__r0],A
 040E 38FC              add SP,-4
 0410 5047              mov A,71
 0412 08                push A
 0413 5000              mov A,0
 0415 08                push A
 0416 08                push A
 0417 08                push A
 0418 5100              mov A,[__r0]
 041A 08                push A
 041B 5100              mov A,[__r1]
 041D 08                push A
 041E 5100              mov A,[__r2]
 0420 08                push A
 0421 5100              mov A,[__r3]
 0423 08                push A
 0424 7C0000            xcall __fpcmp
 0427 38F8              add SP,-8
 0429 39FF              cmp A,-1
 042B A047              jz L17
 042D 5047              mov A,71
 042F 08                push A
 0430 5000              mov A,0
 0432 08                push A
 0433 08                push A
 0434 08                push A
 0435 5100              mov A,[__r0]
 0437 08                push A
 0438 5100              mov A,[__r1]
 043A 08                push A
 043B 5100              mov A,[__r2]
 043D 08                push A
 043E 5100              mov A,[__r3]
 0440 08                push A
 0441 7C0000            xcall __fpsub
 0444 18                pop A
 0445 5300              mov [__r7],A
 0447 18                pop A
 0448 5300              mov [__r6],A
 044A 18                pop A
 044B 5300              mov [__r5],A
 044D 18                pop A
 044E 38FC              add SP,-4
 0450 08                push A
 0451 5100              mov A,[__r5]
 0453 08                push A
 0454 5100              mov A,[__r6]
 0456 08                push A
 0457 5100              mov A,[__r7]
 0459 08                push A
 045A 7C0000            xcall __fp2long
 045D 18                pop A
 045E 5300              mov [__r5],A
 0460 18                pop A
 0461 5300              mov [__r4],A
 0463 38FE              add SP,-2
 0465 5100              mov A,[__r5]
 0467 0100              add A,0
 0469 5401              mov [X+1],A
 046B 5100              mov A,[__r4]
 046D 0980              adc A,-128
 046F 5400              mov [X+0],A
 0471 8020              xjmp L18
 0473           L17:
 0473 5100              mov A,[__r0]
 0475 08                push A
 0476 5100              mov A,[__r1]
 0478 08                push A
 0479 5100              mov A,[__r2]
 047B 08                push A
 047C 5100              mov A,[__r3]
 047E 08                push A
 047F 7C0000            xcall __fp2long
 0482 18                pop A
 0483 5300              mov [__r1],A
 0485 18                pop A
 0486 5300              mov [__r0],A
 0488 38FE              add SP,-2
 048A 5100              mov A,[__r1]
 048C 5401              mov [X+1],A
 048E 5100              mov A,[__r0]
 0490 5400              mov [X+0],A
 0492           L18:
 0492 5201              mov A,[X+1]
 0494 10                push X
 0495 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 0498 20                pop X
 0499                   .dbline 75
 0499           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 0499 52FC              mov A,[X-4]
 049B 10                push X
 049C 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 049F 20                pop X
 04A0                   .dbline -2
 04A0           L15:
 04A0 38FE              add SP,-2
 04A2 20                pop X
 04A3                   .dbline 0 ; func end
 04A3 7F                ret
 04A4                   .dbsym l pulse -5 I
 04A4                   .dbend
 04A4                   .dbfunc e TestTurnLeft _TestTurnLeft fV
 04A4           ;          pulse -> X-5
 04A4           _TestTurnLeft::
 04A4                   .dbline -1
 04A4 10                push X
 04A5 4F                mov X,SP
 04A6                   .dbline 81
 04A6           ; }
 04A6           ; 
 04A6           ; 
 04A6           ; //TEST LEFTTURN
 04A6           ; void TestTurnLeft(int pulse)
 04A6           ; {
 04A6                   .dbline 82
 04A6           ;       Port1_Data_ADDR &= NOLLAA;
 04A6 2600F0            and [_Port1_Data_ADDR],-16
 04A9                   .dbline 82
 04A9                   .dbline 83
 04A9           ;       Port1_Data_ADDR |= 0b00000100;
 04A9 2E0004            or [_Port1_Data_ADDR],4
 04AC                   .dbline 85
 04AC           ;       
 04AC           ;       PWM8_VASEN_WritePulseWidth(0);
 04AC 10                push X
 04AD 5000              mov A,0
 04AF 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 04B2 20                pop X
 04B3                   .dbline 86
 04B3           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 04B3 52FC              mov A,[X-4]
 04B5 10                push X
 04B6 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 04B9 20                pop X
 04BA                   .dbline -2
 04BA           L19:
 04BA 20                pop X
 04BB                   .dbline 0 ; func end
 04BB 7F                ret
 04BC                   .dbsym l pulse -5 I
 04BC                   .dbend
                        .area bss(ram, con, rel)
 0000                   .dbfile C:\Users\Kaxxo\DOCUME~1\Robor7\ROBOTT~1\ROBOTT~1\motorcontrol.c
 0000           _Port1_Data_ADDR::
 0000                   .blkb 1
 0001                   .dbsym e Port1_Data_ADDR _Port1_Data_ADDR c
