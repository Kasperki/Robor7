                        .module motorcontrol.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./motorcontrol.c
                        .area lit(rom, con, rel, lit)
 0000           _LEFTFOW::
 0000 0001              .word 1
 0002                   .dbfile C:\Users\Kaxxo\DOCUME~1\Robor7\ROBOTT~1\ROBOTT~1\motorcontrol.c
 0002                   .dbsym e LEFTFOW _LEFTFOW kI
 0002           _LEFTBACK::
 0002 0010              .word 16
 0004                   .dbsym e LEFTBACK _LEFTBACK kI
 0004           _RIGHTFOW::
 0004 0002              .word 2
 0006                   .dbsym e RIGHTFOW _RIGHTFOW kI
 0006           _RIGHTBACK::
 0006 0020              .word 32
 0008                   .dbsym e RIGHTBACK _RIGHTBACK kI
 0008           _OIKEUSKERROIN::
 0008 3F4CCCCD          .word 0x3f4c,0xcccd
 000C                   .dbsym e OIKEUSKERROIN _OIKEUSKERROIN kD
                        .area text(rom, con, rel)
 0000                   .dbfile C:\Users\Kaxxo\DOCUME~1\Robor7\ROBOTT~1\ROBOTT~1\motorcontrol.c
 0000                   .dbfunc e InitPWM _InitPWM fV
 0000           _InitPWM::
 0000                   .dbline -1
 0000                   .dbline 18
 0000           ; #include <m8c.h>        // part specific constants and macros
 0000           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0000           ; 
 0000           ; //Esim!
 0000           ; //PRT0GS |= 0x01; Connects PORT_0_0 to GlobalOutEven 
 0000           ; //PRT0GS &= ~0x01; Disconnects PORT0_0 from GlobalOutEven
 0000           ; 
 0000           ; //Porttien osoitteet
 0000           ; const int LEFTFOW = 0x01; //Port0_0 VasenPuoli Eteenpäin
 0000           ; const int LEFTBACK = 0x10; //Port0_4 VasenPuoli Taaksepäin
 0000           ; 
 0000           ; const int RIGHTFOW = 0x02; //Port0_1 OikeaPuoli Eteenpäin
 0000           ; const int RIGHTBACK = 0x20; //Port0_5 OikeaPuoli Taaksepäin
 0000           ; const float OIKEUSKERROIN = 0.8f; //Kerroin vasemalle puolelle jotta robotti kulkisi suoraan
 0000           ; 
 0000           ; //Käynnistää PWM Moduulit
 0000           ; void InitPWM()
 0000           ; {
 0000                   .dbline 19
 0000           ;       PWM8_VASEN_Start();
 0000 10                push X
 0001 7C0000            xcall _PWM8_VASEN_Start
 0004                   .dbline 20
 0004           ;       PWM8_OIKEA_Start();
 0004 7C0000            xcall _PWM8_OIKEA_Start
 0007 20                pop X
 0008                   .dbline 22
 0008           ;       
 0008           ;       PRT0GS &= ~LEFTBACK;
 0008 5002              mov A,>_LEFTBACK
 000A 10                push X
 000B 5702              mov X,<_LEFTBACK
 000D 08                push A
 000E 28                romx
 000F 18                pop A
 0010 75                inc X
 0011 0900              adc A,0
 0013 28                romx
 0014 20                pop X
 0015 73                cpl A
 0016 5300              mov [__r1],A
 0018 5D02              mov A,REG[0x2]
 001A 2200              and A,[__r1]
 001C 6002              mov REG[0x2],A
 001E                   .dbline 23
 001E           ;       PRT0GS &= ~RIGHTBACK;
 001E 5006              mov A,>_RIGHTBACK
 0020 10                push X
 0021 5706              mov X,<_RIGHTBACK
 0023 08                push A
 0024 28                romx
 0025 18                pop A
 0026 75                inc X
 0027 0900              adc A,0
 0029 28                romx
 002A 20                pop X
 002B 73                cpl A
 002C 5300              mov [__r1],A
 002E 5D02              mov A,REG[0x2]
 0030 2200              and A,[__r1]
 0032 6002              mov REG[0x2],A
 0034                   .dbline 24
 0034           ;       PRT0GS &= ~LEFTFOW;
 0034 5000              mov A,>_LEFTFOW
 0036 10                push X
 0037 5700              mov X,<_LEFTFOW
 0039 08                push A
 003A 28                romx
 003B 18                pop A
 003C 75                inc X
 003D 0900              adc A,0
 003F 28                romx
 0040 20                pop X
 0041 73                cpl A
 0042 5300              mov [__r1],A
 0044 5D02              mov A,REG[0x2]
 0046 2200              and A,[__r1]
 0048 6002              mov REG[0x2],A
 004A                   .dbline 25
 004A           ;       PRT0GS &= ~RIGHTFOW;
 004A 5004              mov A,>_RIGHTFOW
 004C 10                push X
 004D 5704              mov X,<_RIGHTFOW
 004F 08                push A
 0050 28                romx
 0051 18                pop A
 0052 75                inc X
 0053 0900              adc A,0
 0055 28                romx
 0056 20                pop X
 0057 73                cpl A
 0058 5300              mov [__r1],A
 005A 5D02              mov A,REG[0x2]
 005C 2200              and A,[__r1]
 005E 6002              mov REG[0x2],A
 0060                   .dbline -2
 0060           L1:
 0060                   .dbline 0 ; func end
 0060 7F                ret
 0061                   .dbend
 0061                   .dbfunc e MoveForward _MoveForward fV
 0061           ;          pulse -> X-5
 0061           _MoveForward::
 0061                   .dbline -1
 0061 10                push X
 0062 4F                mov X,SP
 0063 3802              add SP,2
 0065                   .dbline 30
 0065           ; }
 0065           ; 
 0065           ; //Kulkee eteenpäin arvolla..
 0065           ; void MoveForward(int pulse)
 0065           ; {                     
 0065                   .dbline 31
 0065           ;       PRT0GS |= LEFTFOW;
 0065 5000              mov A,>_LEFTFOW
 0067 10                push X
 0068 5700              mov X,<_LEFTFOW
 006A 08                push A
 006B 28                romx
 006C 18                pop A
 006D 75                inc X
 006E 0900              adc A,0
 0070 28                romx
 0071 5300              mov [__r1],A
 0073 20                pop X
 0074 5D02              mov A,REG[0x2]
 0076 2A00              or A,[__r1]
 0078 6002              mov REG[0x2],A
 007A                   .dbline 32
 007A           ;       PRT0GS |= RIGHTFOW;
 007A 5004              mov A,>_RIGHTFOW
 007C 10                push X
 007D 5704              mov X,<_RIGHTFOW
 007F 08                push A
 0080 28                romx
 0081 18                pop A
 0082 75                inc X
 0083 0900              adc A,0
 0085 28                romx
 0086 5300              mov [__r1],A
 0088 20                pop X
 0089 5D02              mov A,REG[0x2]
 008B 2A00              or A,[__r1]
 008D 6002              mov REG[0x2],A
 008F                   .dbline 33
 008F           ;       PRT0GS &= ~LEFTBACK;
 008F 5002              mov A,>_LEFTBACK
 0091 10                push X
 0092 5702              mov X,<_LEFTBACK
 0094 08                push A
 0095 28                romx
 0096 18                pop A
 0097 75                inc X
 0098 0900              adc A,0
 009A 28                romx
 009B 20                pop X
 009C 73                cpl A
 009D 5300              mov [__r1],A
 009F 5D02              mov A,REG[0x2]
 00A1 2200              and A,[__r1]
 00A3 6002              mov REG[0x2],A
 00A5                   .dbline 34
 00A5           ;       PRT0GS &= ~RIGHTBACK;
 00A5 5006              mov A,>_RIGHTBACK
 00A7 10                push X
 00A8 5706              mov X,<_RIGHTBACK
 00AA 08                push A
 00AB 28                romx
 00AC 18                pop A
 00AD 75                inc X
 00AE 0900              adc A,0
 00B0 28                romx
 00B1 20                pop X
 00B2 73                cpl A
 00B3 5300              mov [__r1],A
 00B5 5D02              mov A,REG[0x2]
 00B7 2200              and A,[__r1]
 00B9 6002              mov REG[0x2],A
 00BB                   .dbline 36
 00BB           ;       
 00BB           ;       PWM8_VASEN_WritePulseWidth((BYTE)(pulse * OIKEUSKERROIN));
 00BB 550008            mov [__r1],<_OIKEUSKERROIN
 00BE 5008              mov A,>_OIKEUSKERROIN
 00C0 10                push X
 00C1 5800              mov X,[__r1]
 00C3 08                push A
 00C4 28                romx
 00C5 5300              mov [__r0],A
 00C7 18                pop A
 00C8 75                inc X
 00C9 0900              adc A,0
 00CB 08                push A
 00CC 28                romx
 00CD 5300              mov [__r1],A
 00CF 18                pop A
 00D0 75                inc X
 00D1 0900              adc A,0
 00D3 08                push A
 00D4 28                romx
 00D5 5300              mov [__r2],A
 00D7 18                pop A
 00D8 75                inc X
 00D9 0900              adc A,0
 00DB 28                romx
 00DC 5300              mov [__r3],A
 00DE 20                pop X
 00DF 52FC              mov A,[X-4]
 00E1 5300              mov [__r7],A
 00E3 52FB              mov A,[X-5]
 00E5 5300              mov [__r6],A
 00E7 470080            tst [__r6],-128
 00EA A009              jz X0
 00EC 5500FF            mov [__r5],-1
 00EF 5500FF            mov [__r4],-1
 00F2 8007              jmp X1
 00F4           X0:
 00F4 550000            mov [__r5],0
 00F7 550000            mov [__r4],0
 00FA           X1:
 00FA 5100              mov A,[__r4]
 00FC 08                push A
 00FD 5100              mov A,[__r5]
 00FF 08                push A
 0100 5100              mov A,[__r6]
 0102 08                push A
 0103 5100              mov A,[__r7]
 0105 08                push A
 0106 7C0000            xcall __long2fp
 0109 18                pop A
 010A 5300              mov [__r7],A
 010C 18                pop A
 010D 5300              mov [__r6],A
 010F 18                pop A
 0110 5300              mov [__r5],A
 0112 18                pop A
 0113 5300              mov [__r4],A
 0115 5100              mov A,[__r0]
 0117 08                push A
 0118 5100              mov A,[__r1]
 011A 08                push A
 011B 5100              mov A,[__r2]
 011D 08                push A
 011E 5100              mov A,[__r3]
 0120 08                push A
 0121 5100              mov A,[__r4]
 0123 08                push A
 0124 5100              mov A,[__r5]
 0126 08                push A
 0127 5100              mov A,[__r6]
 0129 08                push A
 012A 5100              mov A,[__r7]
 012C 08                push A
 012D 7C0000            xcall __fpmul
 0130 18                pop A
 0131 5300              mov [__r3],A
 0133 18                pop A
 0134 5300              mov [__r2],A
 0136 18                pop A
 0137 5300              mov [__r1],A
 0139 18                pop A
 013A 5300              mov [__r0],A
 013C 38FC              add SP,-4
 013E 5047              mov A,71
 0140 08                push A
 0141 5000              mov A,0
 0143 08                push A
 0144 08                push A
 0145 08                push A
 0146 5100              mov A,[__r0]
 0148 08                push A
 0149 5100              mov A,[__r1]
 014B 08                push A
 014C 5100              mov A,[__r2]
 014E 08                push A
 014F 5100              mov A,[__r3]
 0151 08                push A
 0152 7C0000            xcall __fpcmp
 0155 38F8              add SP,-8
 0157 39FF              cmp A,-1
 0159 A047              jz L4
 015B 5047              mov A,71
 015D 08                push A
 015E 5000              mov A,0
 0160 08                push A
 0161 08                push A
 0162 08                push A
 0163 5100              mov A,[__r0]
 0165 08                push A
 0166 5100              mov A,[__r1]
 0168 08                push A
 0169 5100              mov A,[__r2]
 016B 08                push A
 016C 5100              mov A,[__r3]
 016E 08                push A
 016F 7C0000            xcall __fpsub
 0172 18                pop A
 0173 5300              mov [__r7],A
 0175 18                pop A
 0176 5300              mov [__r6],A
 0178 18                pop A
 0179 5300              mov [__r5],A
 017B 18                pop A
 017C 38FC              add SP,-4
 017E 08                push A
 017F 5100              mov A,[__r5]
 0181 08                push A
 0182 5100              mov A,[__r6]
 0184 08                push A
 0185 5100              mov A,[__r7]
 0187 08                push A
 0188 7C0000            xcall __fp2long
 018B 18                pop A
 018C 5300              mov [__r5],A
 018E 18                pop A
 018F 5300              mov [__r4],A
 0191 38FE              add SP,-2
 0193 5100              mov A,[__r5]
 0195 0100              add A,0
 0197 5401              mov [X+1],A
 0199 5100              mov A,[__r4]
 019B 0980              adc A,-128
 019D 5400              mov [X+0],A
 019F 8020              xjmp L5
 01A1           L4:
 01A1 5100              mov A,[__r0]
 01A3 08                push A
 01A4 5100              mov A,[__r1]
 01A6 08                push A
 01A7 5100              mov A,[__r2]
 01A9 08                push A
 01AA 5100              mov A,[__r3]
 01AC 08                push A
 01AD 7C0000            xcall __fp2long
 01B0 18                pop A
 01B1 5300              mov [__r1],A
 01B3 18                pop A
 01B4 5300              mov [__r0],A
 01B6 38FE              add SP,-2
 01B8 5100              mov A,[__r1]
 01BA 5401              mov [X+1],A
 01BC 5100              mov A,[__r0]
 01BE 5400              mov [X+0],A
 01C0           L5:
 01C0 5201              mov A,[X+1]
 01C2 10                push X
 01C3 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 01C6 20                pop X
 01C7                   .dbline 37
 01C7           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 01C7 52FC              mov A,[X-4]
 01C9 10                push X
 01CA 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 01CD 20                pop X
 01CE                   .dbline -2
 01CE           L2:
 01CE 38FE              add SP,-2
 01D0 20                pop X
 01D1                   .dbline 0 ; func end
 01D1 7F                ret
 01D2                   .dbsym l pulse -5 I
 01D2                   .dbend
 01D2                   .dbfunc e MoveBackward _MoveBackward fV
 01D2           ;          pulse -> X-5
 01D2           _MoveBackward::
 01D2                   .dbline -1
 01D2 10                push X
 01D3 4F                mov X,SP
 01D4 3802              add SP,2
 01D6                   .dbline 42
 01D6           ; }
 01D6           ; 
 01D6           ; //Kulkee taaksepäin arvolla
 01D6           ; void MoveBackward(int pulse)
 01D6           ; {
 01D6                   .dbline 43
 01D6           ;       PRT0GS &= ~LEFTFOW;
 01D6 5000              mov A,>_LEFTFOW
 01D8 10                push X
 01D9 5700              mov X,<_LEFTFOW
 01DB 08                push A
 01DC 28                romx
 01DD 18                pop A
 01DE 75                inc X
 01DF 0900              adc A,0
 01E1 28                romx
 01E2 20                pop X
 01E3 73                cpl A
 01E4 5300              mov [__r1],A
 01E6 5D02              mov A,REG[0x2]
 01E8 2200              and A,[__r1]
 01EA 6002              mov REG[0x2],A
 01EC                   .dbline 44
 01EC           ;       PRT0GS &= ~RIGHTFOW;
 01EC 5004              mov A,>_RIGHTFOW
 01EE 10                push X
 01EF 5704              mov X,<_RIGHTFOW
 01F1 08                push A
 01F2 28                romx
 01F3 18                pop A
 01F4 75                inc X
 01F5 0900              adc A,0
 01F7 28                romx
 01F8 20                pop X
 01F9 73                cpl A
 01FA 5300              mov [__r1],A
 01FC 5D02              mov A,REG[0x2]
 01FE 2200              and A,[__r1]
 0200 6002              mov REG[0x2],A
 0202                   .dbline 45
 0202           ;       PRT0GS |= LEFTBACK;
 0202 5002              mov A,>_LEFTBACK
 0204 10                push X
 0205 5702              mov X,<_LEFTBACK
 0207 08                push A
 0208 28                romx
 0209 18                pop A
 020A 75                inc X
 020B 0900              adc A,0
 020D 28                romx
 020E 5300              mov [__r1],A
 0210 20                pop X
 0211 5D02              mov A,REG[0x2]
 0213 2A00              or A,[__r1]
 0215 6002              mov REG[0x2],A
 0217                   .dbline 46
 0217           ;       PRT0GS |= RIGHTBACK;
 0217 5006              mov A,>_RIGHTBACK
 0219 10                push X
 021A 5706              mov X,<_RIGHTBACK
 021C 08                push A
 021D 28                romx
 021E 18                pop A
 021F 75                inc X
 0220 0900              adc A,0
 0222 28                romx
 0223 5300              mov [__r1],A
 0225 20                pop X
 0226 5D02              mov A,REG[0x2]
 0228 2A00              or A,[__r1]
 022A 6002              mov REG[0x2],A
 022C                   .dbline 48
 022C           ;       
 022C           ;       PWM8_VASEN_WritePulseWidth((BYTE)(pulse * OIKEUSKERROIN));
 022C 550008            mov [__r1],<_OIKEUSKERROIN
 022F 5008              mov A,>_OIKEUSKERROIN
 0231 10                push X
 0232 5800              mov X,[__r1]
 0234 08                push A
 0235 28                romx
 0236 5300              mov [__r0],A
 0238 18                pop A
 0239 75                inc X
 023A 0900              adc A,0
 023C 08                push A
 023D 28                romx
 023E 5300              mov [__r1],A
 0240 18                pop A
 0241 75                inc X
 0242 0900              adc A,0
 0244 08                push A
 0245 28                romx
 0246 5300              mov [__r2],A
 0248 18                pop A
 0249 75                inc X
 024A 0900              adc A,0
 024C 28                romx
 024D 5300              mov [__r3],A
 024F 20                pop X
 0250 52FC              mov A,[X-4]
 0252 5300              mov [__r7],A
 0254 52FB              mov A,[X-5]
 0256 5300              mov [__r6],A
 0258 470080            tst [__r6],-128
 025B A009              jz X3
 025D 5500FF            mov [__r5],-1
 0260 5500FF            mov [__r4],-1
 0263 8007              jmp X4
 0265           X3:
 0265 550000            mov [__r5],0
 0268 550000            mov [__r4],0
 026B           X4:
 026B 5100              mov A,[__r4]
 026D 08                push A
 026E 5100              mov A,[__r5]
 0270 08                push A
 0271 5100              mov A,[__r6]
 0273 08                push A
 0274 5100              mov A,[__r7]
 0276 08                push A
 0277 7C0000            xcall __long2fp
 027A 18                pop A
 027B 5300              mov [__r7],A
 027D 18                pop A
 027E 5300              mov [__r6],A
 0280 18                pop A
 0281 5300              mov [__r5],A
 0283 18                pop A
 0284 5300              mov [__r4],A
 0286 5100              mov A,[__r0]
 0288 08                push A
 0289 5100              mov A,[__r1]
 028B 08                push A
 028C 5100              mov A,[__r2]
 028E 08                push A
 028F 5100              mov A,[__r3]
 0291 08                push A
 0292 5100              mov A,[__r4]
 0294 08                push A
 0295 5100              mov A,[__r5]
 0297 08                push A
 0298 5100              mov A,[__r6]
 029A 08                push A
 029B 5100              mov A,[__r7]
 029D 08                push A
 029E 7C0000            xcall __fpmul
 02A1 18                pop A
 02A2 5300              mov [__r3],A
 02A4 18                pop A
 02A5 5300              mov [__r2],A
 02A7 18                pop A
 02A8 5300              mov [__r1],A
 02AA 18                pop A
 02AB 5300              mov [__r0],A
 02AD 38FC              add SP,-4
 02AF 5047              mov A,71
 02B1 08                push A
 02B2 5000              mov A,0
 02B4 08                push A
 02B5 08                push A
 02B6 08                push A
 02B7 5100              mov A,[__r0]
 02B9 08                push A
 02BA 5100              mov A,[__r1]
 02BC 08                push A
 02BD 5100              mov A,[__r2]
 02BF 08                push A
 02C0 5100              mov A,[__r3]
 02C2 08                push A
 02C3 7C0000            xcall __fpcmp
 02C6 38F8              add SP,-8
 02C8 39FF              cmp A,-1
 02CA A047              jz L8
 02CC 5047              mov A,71
 02CE 08                push A
 02CF 5000              mov A,0
 02D1 08                push A
 02D2 08                push A
 02D3 08                push A
 02D4 5100              mov A,[__r0]
 02D6 08                push A
 02D7 5100              mov A,[__r1]
 02D9 08                push A
 02DA 5100              mov A,[__r2]
 02DC 08                push A
 02DD 5100              mov A,[__r3]
 02DF 08                push A
 02E0 7C0000            xcall __fpsub
 02E3 18                pop A
 02E4 5300              mov [__r7],A
 02E6 18                pop A
 02E7 5300              mov [__r6],A
 02E9 18                pop A
 02EA 5300              mov [__r5],A
 02EC 18                pop A
 02ED 38FC              add SP,-4
 02EF 08                push A
 02F0 5100              mov A,[__r5]
 02F2 08                push A
 02F3 5100              mov A,[__r6]
 02F5 08                push A
 02F6 5100              mov A,[__r7]
 02F8 08                push A
 02F9 7C0000            xcall __fp2long
 02FC 18                pop A
 02FD 5300              mov [__r5],A
 02FF 18                pop A
 0300 5300              mov [__r4],A
 0302 38FE              add SP,-2
 0304 5100              mov A,[__r5]
 0306 0100              add A,0
 0308 5401              mov [X+1],A
 030A 5100              mov A,[__r4]
 030C 0980              adc A,-128
 030E 5400              mov [X+0],A
 0310 8020              xjmp L9
 0312           L8:
 0312 5100              mov A,[__r0]
 0314 08                push A
 0315 5100              mov A,[__r1]
 0317 08                push A
 0318 5100              mov A,[__r2]
 031A 08                push A
 031B 5100              mov A,[__r3]
 031D 08                push A
 031E 7C0000            xcall __fp2long
 0321 18                pop A
 0322 5300              mov [__r1],A
 0324 18                pop A
 0325 5300              mov [__r0],A
 0327 38FE              add SP,-2
 0329 5100              mov A,[__r1]
 032B 5401              mov [X+1],A
 032D 5100              mov A,[__r0]
 032F 5400              mov [X+0],A
 0331           L9:
 0331 5201              mov A,[X+1]
 0333 10                push X
 0334 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 0337 20                pop X
 0338                   .dbline 49
 0338           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 0338 52FC              mov A,[X-4]
 033A 10                push X
 033B 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 033E 20                pop X
 033F                   .dbline -2
 033F           L6:
 033F 38FE              add SP,-2
 0341 20                pop X
 0342                   .dbline 0 ; func end
 0342 7F                ret
 0343                   .dbsym l pulse -5 I
 0343                   .dbend
 0343                   .dbfunc e Stop _Stop fV
 0343           _Stop::
 0343                   .dbline -1
 0343                   .dbline 54
 0343           ; }
 0343           ; 
 0343           ; //Pysäyttää Moottorit
 0343           ; void Stop()
 0343           ; {
 0343                   .dbline 55
 0343           ;       PWM8_OIKEA_WritePulseWidth(0);
 0343 10                push X
 0344 5000              mov A,0
 0346 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 0349                   .dbline 56
 0349           ;       PWM8_VASEN_WritePulseWidth(0);
 0349 5000              mov A,0
 034B 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 034E 20                pop X
 034F                   .dbline -2
 034F           L10:
 034F                   .dbline 0 ; func end
 034F 7F                ret
 0350                   .dbend
 0350                   .dbfunc e TurnLeft _TurnLeft fV
 0350           ;          pulse -> X-5
 0350           _TurnLeft::
 0350                   .dbline -1
 0350 10                push X
 0351 4F                mov X,SP
 0352 3802              add SP,2
 0354                   .dbline 61
 0354           ; }
 0354           ; 
 0354           ; //Kääntyy vasemmalle
 0354           ; void TurnLeft(int pulse)
 0354           ; {
 0354                   .dbline 62
 0354           ;       PRT0GS &= ~LEFTBACK;
 0354 5002              mov A,>_LEFTBACK
 0356 10                push X
 0357 5702              mov X,<_LEFTBACK
 0359 08                push A
 035A 28                romx
 035B 18                pop A
 035C 75                inc X
 035D 0900              adc A,0
 035F 28                romx
 0360 20                pop X
 0361 73                cpl A
 0362 5300              mov [__r1],A
 0364 5D02              mov A,REG[0x2]
 0366 2200              and A,[__r1]
 0368 6002              mov REG[0x2],A
 036A                   .dbline 63
 036A           ;       PRT0GS |= LEFTFOW;
 036A 5000              mov A,>_LEFTFOW
 036C 10                push X
 036D 5700              mov X,<_LEFTFOW
 036F 08                push A
 0370 28                romx
 0371 18                pop A
 0372 75                inc X
 0373 0900              adc A,0
 0375 28                romx
 0376 5300              mov [__r1],A
 0378 20                pop X
 0379 5D02              mov A,REG[0x2]
 037B 2A00              or A,[__r1]
 037D 6002              mov REG[0x2],A
 037F                   .dbline 64
 037F           ;       PRT0GS &= ~RIGHTFOW;
 037F 5004              mov A,>_RIGHTFOW
 0381 10                push X
 0382 5704              mov X,<_RIGHTFOW
 0384 08                push A
 0385 28                romx
 0386 18                pop A
 0387 75                inc X
 0388 0900              adc A,0
 038A 28                romx
 038B 20                pop X
 038C 73                cpl A
 038D 5300              mov [__r1],A
 038F 5D02              mov A,REG[0x2]
 0391 2200              and A,[__r1]
 0393 6002              mov REG[0x2],A
 0395                   .dbline 65
 0395           ;       PRT0GS |= RIGHTBACK;
 0395 5006              mov A,>_RIGHTBACK
 0397 10                push X
 0398 5706              mov X,<_RIGHTBACK
 039A 08                push A
 039B 28                romx
 039C 18                pop A
 039D 75                inc X
 039E 0900              adc A,0
 03A0 28                romx
 03A1 5300              mov [__r1],A
 03A3 20                pop X
 03A4 5D02              mov A,REG[0x2]
 03A6 2A00              or A,[__r1]
 03A8 6002              mov REG[0x2],A
 03AA                   .dbline 67
 03AA           ;               
 03AA           ;       PWM8_VASEN_WritePulseWidth((BYTE)(pulse * OIKEUSKERROIN));
 03AA 550008            mov [__r1],<_OIKEUSKERROIN
 03AD 5008              mov A,>_OIKEUSKERROIN
 03AF 10                push X
 03B0 5800              mov X,[__r1]
 03B2 08                push A
 03B3 28                romx
 03B4 5300              mov [__r0],A
 03B6 18                pop A
 03B7 75                inc X
 03B8 0900              adc A,0
 03BA 08                push A
 03BB 28                romx
 03BC 5300              mov [__r1],A
 03BE 18                pop A
 03BF 75                inc X
 03C0 0900              adc A,0
 03C2 08                push A
 03C3 28                romx
 03C4 5300              mov [__r2],A
 03C6 18                pop A
 03C7 75                inc X
 03C8 0900              adc A,0
 03CA 28                romx
 03CB 5300              mov [__r3],A
 03CD 20                pop X
 03CE 52FC              mov A,[X-4]
 03D0 5300              mov [__r7],A
 03D2 52FB              mov A,[X-5]
 03D4 5300              mov [__r6],A
 03D6 470080            tst [__r6],-128
 03D9 A009              jz X6
 03DB 5500FF            mov [__r5],-1
 03DE 5500FF            mov [__r4],-1
 03E1 8007              jmp X7
 03E3           X6:
 03E3 550000            mov [__r5],0
 03E6 550000            mov [__r4],0
 03E9           X7:
 03E9 5100              mov A,[__r4]
 03EB 08                push A
 03EC 5100              mov A,[__r5]
 03EE 08                push A
 03EF 5100              mov A,[__r6]
 03F1 08                push A
 03F2 5100              mov A,[__r7]
 03F4 08                push A
 03F5 7C0000            xcall __long2fp
 03F8 18                pop A
 03F9 5300              mov [__r7],A
 03FB 18                pop A
 03FC 5300              mov [__r6],A
 03FE 18                pop A
 03FF 5300              mov [__r5],A
 0401 18                pop A
 0402 5300              mov [__r4],A
 0404 5100              mov A,[__r0]
 0406 08                push A
 0407 5100              mov A,[__r1]
 0409 08                push A
 040A 5100              mov A,[__r2]
 040C 08                push A
 040D 5100              mov A,[__r3]
 040F 08                push A
 0410 5100              mov A,[__r4]
 0412 08                push A
 0413 5100              mov A,[__r5]
 0415 08                push A
 0416 5100              mov A,[__r6]
 0418 08                push A
 0419 5100              mov A,[__r7]
 041B 08                push A
 041C 7C0000            xcall __fpmul
 041F 18                pop A
 0420 5300              mov [__r3],A
 0422 18                pop A
 0423 5300              mov [__r2],A
 0425 18                pop A
 0426 5300              mov [__r1],A
 0428 18                pop A
 0429 5300              mov [__r0],A
 042B 38FC              add SP,-4
 042D 5047              mov A,71
 042F 08                push A
 0430 5000              mov A,0
 0432 08                push A
 0433 08                push A
 0434 08                push A
 0435 5100              mov A,[__r0]
 0437 08                push A
 0438 5100              mov A,[__r1]
 043A 08                push A
 043B 5100              mov A,[__r2]
 043D 08                push A
 043E 5100              mov A,[__r3]
 0440 08                push A
 0441 7C0000            xcall __fpcmp
 0444 38F8              add SP,-8
 0446 39FF              cmp A,-1
 0448 A047              jz L13
 044A 5047              mov A,71
 044C 08                push A
 044D 5000              mov A,0
 044F 08                push A
 0450 08                push A
 0451 08                push A
 0452 5100              mov A,[__r0]
 0454 08                push A
 0455 5100              mov A,[__r1]
 0457 08                push A
 0458 5100              mov A,[__r2]
 045A 08                push A
 045B 5100              mov A,[__r3]
 045D 08                push A
 045E 7C0000            xcall __fpsub
 0461 18                pop A
 0462 5300              mov [__r7],A
 0464 18                pop A
 0465 5300              mov [__r6],A
 0467 18                pop A
 0468 5300              mov [__r5],A
 046A 18                pop A
 046B 38FC              add SP,-4
 046D 08                push A
 046E 5100              mov A,[__r5]
 0470 08                push A
 0471 5100              mov A,[__r6]
 0473 08                push A
 0474 5100              mov A,[__r7]
 0476 08                push A
 0477 7C0000            xcall __fp2long
 047A 18                pop A
 047B 5300              mov [__r5],A
 047D 18                pop A
 047E 5300              mov [__r4],A
 0480 38FE              add SP,-2
 0482 5100              mov A,[__r5]
 0484 0100              add A,0
 0486 5401              mov [X+1],A
 0488 5100              mov A,[__r4]
 048A 0980              adc A,-128
 048C 5400              mov [X+0],A
 048E 8020              xjmp L14
 0490           L13:
 0490 5100              mov A,[__r0]
 0492 08                push A
 0493 5100              mov A,[__r1]
 0495 08                push A
 0496 5100              mov A,[__r2]
 0498 08                push A
 0499 5100              mov A,[__r3]
 049B 08                push A
 049C 7C0000            xcall __fp2long
 049F 18                pop A
 04A0 5300              mov [__r1],A
 04A2 18                pop A
 04A3 5300              mov [__r0],A
 04A5 38FE              add SP,-2
 04A7 5100              mov A,[__r1]
 04A9 5401              mov [X+1],A
 04AB 5100              mov A,[__r0]
 04AD 5400              mov [X+0],A
 04AF           L14:
 04AF 5201              mov A,[X+1]
 04B1 10                push X
 04B2 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 04B5 20                pop X
 04B6                   .dbline 68
 04B6           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 04B6 52FC              mov A,[X-4]
 04B8 10                push X
 04B9 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 04BC 20                pop X
 04BD                   .dbline -2
 04BD           L11:
 04BD 38FE              add SP,-2
 04BF 20                pop X
 04C0                   .dbline 0 ; func end
 04C0 7F                ret
 04C1                   .dbsym l pulse -5 I
 04C1                   .dbend
 04C1                   .dbfunc e TurnRight _TurnRight fV
 04C1           ;          pulse -> X-5
 04C1           _TurnRight::
 04C1                   .dbline -1
 04C1 10                push X
 04C2 4F                mov X,SP
 04C3 3802              add SP,2
 04C5                   .dbline 73
 04C5           ; }
 04C5           ; 
 04C5           ; //Kääntyy oikealle
 04C5           ; void TurnRight(int pulse)
 04C5           ; {
 04C5                   .dbline 74
 04C5           ;       PRT0GS |= LEFTBACK;
 04C5 5002              mov A,>_LEFTBACK
 04C7 10                push X
 04C8 5702              mov X,<_LEFTBACK
 04CA 08                push A
 04CB 28                romx
 04CC 18                pop A
 04CD 75                inc X
 04CE 0900              adc A,0
 04D0 28                romx
 04D1 5300              mov [__r1],A
 04D3 20                pop X
 04D4 5D02              mov A,REG[0x2]
 04D6 2A00              or A,[__r1]
 04D8 6002              mov REG[0x2],A
 04DA                   .dbline 75
 04DA           ;       PRT0GS &= ~LEFTFOW;
 04DA 5000              mov A,>_LEFTFOW
 04DC 10                push X
 04DD 5700              mov X,<_LEFTFOW
 04DF 08                push A
 04E0 28                romx
 04E1 18                pop A
 04E2 75                inc X
 04E3 0900              adc A,0
 04E5 28                romx
 04E6 20                pop X
 04E7 73                cpl A
 04E8 5300              mov [__r1],A
 04EA 5D02              mov A,REG[0x2]
 04EC 2200              and A,[__r1]
 04EE 6002              mov REG[0x2],A
 04F0                   .dbline 76
 04F0           ;       PRT0GS |= RIGHTFOW;
 04F0 5004              mov A,>_RIGHTFOW
 04F2 10                push X
 04F3 5704              mov X,<_RIGHTFOW
 04F5 08                push A
 04F6 28                romx
 04F7 18                pop A
 04F8 75                inc X
 04F9 0900              adc A,0
 04FB 28                romx
 04FC 5300              mov [__r1],A
 04FE 20                pop X
 04FF 5D02              mov A,REG[0x2]
 0501 2A00              or A,[__r1]
 0503 6002              mov REG[0x2],A
 0505                   .dbline 77
 0505           ;       PRT0GS &= ~RIGHTBACK;
 0505 5006              mov A,>_RIGHTBACK
 0507 10                push X
 0508 5706              mov X,<_RIGHTBACK
 050A 08                push A
 050B 28                romx
 050C 18                pop A
 050D 75                inc X
 050E 0900              adc A,0
 0510 28                romx
 0511 20                pop X
 0512 73                cpl A
 0513 5300              mov [__r1],A
 0515 5D02              mov A,REG[0x2]
 0517 2200              and A,[__r1]
 0519 6002              mov REG[0x2],A
 051B                   .dbline 79
 051B           ;       
 051B           ;       PWM8_VASEN_WritePulseWidth((BYTE)(pulse * OIKEUSKERROIN));
 051B 550008            mov [__r1],<_OIKEUSKERROIN
 051E 5008              mov A,>_OIKEUSKERROIN
 0520 10                push X
 0521 5800              mov X,[__r1]
 0523 08                push A
 0524 28                romx
 0525 5300              mov [__r0],A
 0527 18                pop A
 0528 75                inc X
 0529 0900              adc A,0
 052B 08                push A
 052C 28                romx
 052D 5300              mov [__r1],A
 052F 18                pop A
 0530 75                inc X
 0531 0900              adc A,0
 0533 08                push A
 0534 28                romx
 0535 5300              mov [__r2],A
 0537 18                pop A
 0538 75                inc X
 0539 0900              adc A,0
 053B 28                romx
 053C 5300              mov [__r3],A
 053E 20                pop X
 053F 52FC              mov A,[X-4]
 0541 5300              mov [__r7],A
 0543 52FB              mov A,[X-5]
 0545 5300              mov [__r6],A
 0547 470080            tst [__r6],-128
 054A A009              jz X9
 054C 5500FF            mov [__r5],-1
 054F 5500FF            mov [__r4],-1
 0552 8007              jmp X10
 0554           X9:
 0554 550000            mov [__r5],0
 0557 550000            mov [__r4],0
 055A           X10:
 055A 5100              mov A,[__r4]
 055C 08                push A
 055D 5100              mov A,[__r5]
 055F 08                push A
 0560 5100              mov A,[__r6]
 0562 08                push A
 0563 5100              mov A,[__r7]
 0565 08                push A
 0566 7C0000            xcall __long2fp
 0569 18                pop A
 056A 5300              mov [__r7],A
 056C 18                pop A
 056D 5300              mov [__r6],A
 056F 18                pop A
 0570 5300              mov [__r5],A
 0572 18                pop A
 0573 5300              mov [__r4],A
 0575 5100              mov A,[__r0]
 0577 08                push A
 0578 5100              mov A,[__r1]
 057A 08                push A
 057B 5100              mov A,[__r2]
 057D 08                push A
 057E 5100              mov A,[__r3]
 0580 08                push A
 0581 5100              mov A,[__r4]
 0583 08                push A
 0584 5100              mov A,[__r5]
 0586 08                push A
 0587 5100              mov A,[__r6]
 0589 08                push A
 058A 5100              mov A,[__r7]
 058C 08                push A
 058D 7C0000            xcall __fpmul
 0590 18                pop A
 0591 5300              mov [__r3],A
 0593 18                pop A
 0594 5300              mov [__r2],A
 0596 18                pop A
 0597 5300              mov [__r1],A
 0599 18                pop A
 059A 5300              mov [__r0],A
 059C 38FC              add SP,-4
 059E 5047              mov A,71
 05A0 08                push A
 05A1 5000              mov A,0
 05A3 08                push A
 05A4 08                push A
 05A5 08                push A
 05A6 5100              mov A,[__r0]
 05A8 08                push A
 05A9 5100              mov A,[__r1]
 05AB 08                push A
 05AC 5100              mov A,[__r2]
 05AE 08                push A
 05AF 5100              mov A,[__r3]
 05B1 08                push A
 05B2 7C0000            xcall __fpcmp
 05B5 38F8              add SP,-8
 05B7 39FF              cmp A,-1
 05B9 A047              jz L17
 05BB 5047              mov A,71
 05BD 08                push A
 05BE 5000              mov A,0
 05C0 08                push A
 05C1 08                push A
 05C2 08                push A
 05C3 5100              mov A,[__r0]
 05C5 08                push A
 05C6 5100              mov A,[__r1]
 05C8 08                push A
 05C9 5100              mov A,[__r2]
 05CB 08                push A
 05CC 5100              mov A,[__r3]
 05CE 08                push A
 05CF 7C0000            xcall __fpsub
 05D2 18                pop A
 05D3 5300              mov [__r7],A
 05D5 18                pop A
 05D6 5300              mov [__r6],A
 05D8 18                pop A
 05D9 5300              mov [__r5],A
 05DB 18                pop A
 05DC 38FC              add SP,-4
 05DE 08                push A
 05DF 5100              mov A,[__r5]
 05E1 08                push A
 05E2 5100              mov A,[__r6]
 05E4 08                push A
 05E5 5100              mov A,[__r7]
 05E7 08                push A
 05E8 7C0000            xcall __fp2long
 05EB 18                pop A
 05EC 5300              mov [__r5],A
 05EE 18                pop A
 05EF 5300              mov [__r4],A
 05F1 38FE              add SP,-2
 05F3 5100              mov A,[__r5]
 05F5 0100              add A,0
 05F7 5401              mov [X+1],A
 05F9 5100              mov A,[__r4]
 05FB 0980              adc A,-128
 05FD 5400              mov [X+0],A
 05FF 8020              xjmp L18
 0601           L17:
 0601 5100              mov A,[__r0]
 0603 08                push A
 0604 5100              mov A,[__r1]
 0606 08                push A
 0607 5100              mov A,[__r2]
 0609 08                push A
 060A 5100              mov A,[__r3]
 060C 08                push A
 060D 7C0000            xcall __fp2long
 0610 18                pop A
 0611 5300              mov [__r1],A
 0613 18                pop A
 0614 5300              mov [__r0],A
 0616 38FE              add SP,-2
 0618 5100              mov A,[__r1]
 061A 5401              mov [X+1],A
 061C 5100              mov A,[__r0]
 061E 5400              mov [X+0],A
 0620           L18:
 0620 5201              mov A,[X+1]
 0622 10                push X
 0623 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 0626 20                pop X
 0627                   .dbline 80
 0627           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 0627 52FC              mov A,[X-4]
 0629 10                push X
 062A 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 062D 20                pop X
 062E                   .dbline -2
 062E           L15:
 062E 38FE              add SP,-2
 0630 20                pop X
 0631                   .dbline 0 ; func end
 0631 7F                ret
 0632                   .dbsym l pulse -5 I
 0632                   .dbend
