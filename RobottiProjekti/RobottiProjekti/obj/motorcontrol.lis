                        .module motorcontrol.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./motorcontrol.c
                        .area lit(rom, con, rel, lit)
 0000           _LEFTFOW::
 0000 0001              .word 1
 0002                   .dbfile C:\Users\Kaxxo\DOCUME~1\Robor7\ROBOTT~1\ROBOTT~1\motorcontrol.c
 0002                   .dbsym e LEFTFOW _LEFTFOW kI
 0002           _LEFTBACK::
 0002 0010              .word 16
 0004                   .dbsym e LEFTBACK _LEFTBACK kI
 0004           _RIGHTFOW::
 0004 0002              .word 2
 0006                   .dbsym e RIGHTFOW _RIGHTFOW kI
 0006           _RIGHTBACK::
 0006 0020              .word 32
 0008                   .dbsym e RIGHTBACK _RIGHTBACK kI
 0008           _OIKEUSKERROIN::
 0008 3F4CCCCD          .word 0x3f4c,0xcccd
 000C                   .dbsym e OIKEUSKERROIN _OIKEUSKERROIN kD
                        .area text(rom, con, rel)
 0000                   .dbfile C:\Users\Kaxxo\DOCUME~1\Robor7\ROBOTT~1\ROBOTT~1\motorcontrol.c
 0000                   .dbfunc e InitPWM _InitPWM fV
 0000           _InitPWM::
 0000                   .dbline -1
 0000                   .dbline 18
 0000           ; #include <m8c.h>        // part specific constants and macros
 0000           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0000           ; 
 0000           ; //Esim!
 0000           ; //PRT0GS |= 0x01; Connects PORT_0_0 to GlobalOutEven 
 0000           ; //PRT0GS &= ~0x01; Disconnects PORT0_0 from GlobalOutEven
 0000           ; 
 0000           ; //Porttien osoitteet
 0000           ; const int LEFTFOW = 0x01; //Port0_0 VasenPuoli Eteenpäin
 0000           ; const int LEFTBACK = 0x10; //Port0_4 VasenPuoli Taaksepäin
 0000           ; 
 0000           ; const int RIGHTFOW = 0x02; //Port0_1 OikeaPuoli Eteenpäin
 0000           ; const int RIGHTBACK = 0x20; //Port0_5 OikeaPuoli Taaksepäin
 0000           ; const float OIKEUSKERROIN = 0.8f; //Kerroin vasemalle puolelle jotta robotti kulkisi suoraan
 0000           ; 
 0000           ; //Käynnistää PWM Moduulit
 0000           ; void InitPWM()
 0000           ; {
 0000                   .dbline 19
 0000           ;       PWM8_VASEN_Start();
 0000 10                push X
 0001 7C0000            xcall _PWM8_VASEN_Start
 0004                   .dbline 20
 0004           ;       PWM8_OIKEA_Start();
 0004 7C0000            xcall _PWM8_OIKEA_Start
 0007 20                pop X
 0008                   .dbline 22
 0008           ;       
 0008           ;       PRT0GS &= ~LEFTBACK;
 0008 5002              mov A,>_LEFTBACK
 000A 10                push X
 000B 5702              mov X,<_LEFTBACK
 000D 08                push A
 000E 28                romx
 000F 18                pop A
 0010 75                inc X
 0011 0900              adc A,0
 0013 28                romx
 0014 20                pop X
 0015 73                cpl A
 0016 5300              mov [__r1],A
 0018 5D02              mov A,REG[0x2]
 001A 2200              and A,[__r1]
 001C 6002              mov REG[0x2],A
 001E                   .dbline 23
 001E           ;       PRT0GS &= ~RIGHTBACK;
 001E 5006              mov A,>_RIGHTBACK
 0020 10                push X
 0021 5706              mov X,<_RIGHTBACK
 0023 08                push A
 0024 28                romx
 0025 18                pop A
 0026 75                inc X
 0027 0900              adc A,0
 0029 28                romx
 002A 20                pop X
 002B 73                cpl A
 002C 5300              mov [__r1],A
 002E 5D02              mov A,REG[0x2]
 0030 2200              and A,[__r1]
 0032 6002              mov REG[0x2],A
 0034                   .dbline 24
 0034           ;       PRT0GS &= ~LEFTFOW;
 0034 5000              mov A,>_LEFTFOW
 0036 10                push X
 0037 5700              mov X,<_LEFTFOW
 0039 08                push A
 003A 28                romx
 003B 18                pop A
 003C 75                inc X
 003D 0900              adc A,0
 003F 28                romx
 0040 20                pop X
 0041 73                cpl A
 0042 5300              mov [__r1],A
 0044 5D02              mov A,REG[0x2]
 0046 2200              and A,[__r1]
 0048 6002              mov REG[0x2],A
 004A                   .dbline 25
 004A           ;       PRT0GS &= ~RIGHTFOW;
 004A 5004              mov A,>_RIGHTFOW
 004C 10                push X
 004D 5704              mov X,<_RIGHTFOW
 004F 08                push A
 0050 28                romx
 0051 18                pop A
 0052 75                inc X
 0053 0900              adc A,0
 0055 28                romx
 0056 20                pop X
 0057 73                cpl A
 0058 5300              mov [__r1],A
 005A 5D02              mov A,REG[0x2]
 005C 2200              and A,[__r1]
 005E 6002              mov REG[0x2],A
 0060                   .dbline -2
 0060           L1:
 0060                   .dbline 0 ; func end
 0060 7F                ret
 0061                   .dbend
 0061                   .dbfunc e MoveForward _MoveForward fV
 0061           ;          pulse -> X-5
 0061           _MoveForward::
 0061                   .dbline -1
 0061 10                push X
 0062 4F                mov X,SP
 0063 3802              add SP,2
 0065                   .dbline 30
 0065           ; }
 0065           ; 
 0065           ; //Kulkee eteenpäin arvolla..
 0065           ; void MoveForward(int pulse)
 0065           ; {                     
 0065                   .dbline 31
 0065           ;       PRT0GS |= LEFTFOW;
 0065 5000              mov A,>_LEFTFOW
 0067 10                push X
 0068 5700              mov X,<_LEFTFOW
 006A 08                push A
 006B 28                romx
 006C 18                pop A
 006D 75                inc X
 006E 0900              adc A,0
 0070 28                romx
 0071 5300              mov [__r1],A
 0073 20                pop X
 0074 5D02              mov A,REG[0x2]
 0076 2A00              or A,[__r1]
 0078 6002              mov REG[0x2],A
 007A                   .dbline 32
 007A           ;       PRT0GS |= RIGHTFOW;
 007A 5004              mov A,>_RIGHTFOW
 007C 10                push X
 007D 5704              mov X,<_RIGHTFOW
 007F 08                push A
 0080 28                romx
 0081 18                pop A
 0082 75                inc X
 0083 0900              adc A,0
 0085 28                romx
 0086 5300              mov [__r1],A
 0088 20                pop X
 0089 5D02              mov A,REG[0x2]
 008B 2A00              or A,[__r1]
 008D 6002              mov REG[0x2],A
 008F                   .dbline 33
 008F           ;       PRT0GS &= ~LEFTBACK;
 008F 5002              mov A,>_LEFTBACK
 0091 10                push X
 0092 5702              mov X,<_LEFTBACK
 0094 08                push A
 0095 28                romx
 0096 18                pop A
 0097 75                inc X
 0098 0900              adc A,0
 009A 28                romx
 009B 20                pop X
 009C 73                cpl A
 009D 5300              mov [__r1],A
 009F 5D02              mov A,REG[0x2]
 00A1 2200              and A,[__r1]
 00A3 6002              mov REG[0x2],A
 00A5                   .dbline 34
 00A5           ;       PRT0GS &= ~RIGHTBACK;
 00A5 5006              mov A,>_RIGHTBACK
 00A7 10                push X
 00A8 5706              mov X,<_RIGHTBACK
 00AA 08                push A
 00AB 28                romx
 00AC 18                pop A
 00AD 75                inc X
 00AE 0900              adc A,0
 00B0 28                romx
 00B1 20                pop X
 00B2 73                cpl A
 00B3 5300              mov [__r1],A
 00B5 5D02              mov A,REG[0x2]
 00B7 2200              and A,[__r1]
 00B9 6002              mov REG[0x2],A
 00BB                   .dbline 36
 00BB           ;       
 00BB           ;       PWM8_VASEN_WritePulseWidth((BYTE)(pulse * OIKEUSKERROIN));
 00BB 550008            mov [__r1],<_OIKEUSKERROIN
 00BE 5008              mov A,>_OIKEUSKERROIN
 00C0 10                push X
 00C1 5800              mov X,[__r1]
 00C3 08                push A
 00C4 28                romx
 00C5 5300              mov [__r0],A
 00C7 18                pop A
 00C8 75                inc X
 00C9 0900              adc A,0
 00CB 08                push A
 00CC 28                romx
 00CD 5300              mov [__r1],A
 00CF 18                pop A
 00D0 75                inc X
 00D1 0900              adc A,0
 00D3 08                push A
 00D4 28                romx
 00D5 5300              mov [__r2],A
 00D7 18                pop A
 00D8 75                inc X
 00D9 0900              adc A,0
 00DB 28                romx
 00DC 5300              mov [__r3],A
 00DE 20                pop X
 00DF 52FC              mov A,[X-4]
 00E1 5300              mov [__r7],A
 00E3 52FB              mov A,[X-5]
 00E5 5300              mov [__r6],A
 00E7 470080            tst [__r6],-128
 00EA A009              jz X0
 00EC 5500FF            mov [__r5],-1
 00EF 5500FF            mov [__r4],-1
 00F2 8007              jmp X1
 00F4           X0:
 00F4 550000            mov [__r5],0
 00F7 550000            mov [__r4],0
 00FA           X1:
 00FA 5100              mov A,[__r4]
 00FC 08                push A
 00FD 5100              mov A,[__r5]
 00FF 08                push A
 0100 5100              mov A,[__r6]
 0102 08                push A
 0103 5100              mov A,[__r7]
 0105 08                push A
 0106 7C0000            xcall __long2fp
 0109 18                pop A
 010A 5300              mov [__r7],A
 010C 18                pop A
 010D 5300              mov [__r6],A
 010F 18                pop A
 0110 5300              mov [__r5],A
 0112 18                pop A
 0113 5300              mov [__r4],A
 0115 5100              mov A,[__r0]
 0117 08                push A
 0118 5100              mov A,[__r1]
 011A 08                push A
 011B 5100              mov A,[__r2]
 011D 08                push A
 011E 5100              mov A,[__r3]
 0120 08                push A
 0121 5100              mov A,[__r4]
 0123 08                push A
 0124 5100              mov A,[__r5]
 0126 08                push A
 0127 5100              mov A,[__r6]
 0129 08                push A
 012A 5100              mov A,[__r7]
 012C 08                push A
 012D 7C0000            xcall __fpmul
 0130 18                pop A
 0131 5300              mov [__r3],A
 0133 18                pop A
 0134 5300              mov [__r2],A
 0136 18                pop A
 0137 5300              mov [__r1],A
 0139 18                pop A
 013A 5300              mov [__r0],A
 013C 38FC              add SP,-4
 013E 5047              mov A,71
 0140 08                push A
 0141 5000              mov A,0
 0143 08                push A
 0144 08                push A
 0145 08                push A
 0146 5100              mov A,[__r0]
 0148 08                push A
 0149 5100              mov A,[__r1]
 014B 08                push A
 014C 5100              mov A,[__r2]
 014E 08                push A
 014F 5100              mov A,[__r3]
 0151 08                push A
 0152 7C0000            xcall __fpcmp
 0155 38F8              add SP,-8
 0157 39FF              cmp A,-1
 0159 A047              jz L4
 015B 5047              mov A,71
 015D 08                push A
 015E 5000              mov A,0
 0160 08                push A
 0161 08                push A
 0162 08                push A
 0163 5100              mov A,[__r0]
 0165 08                push A
 0166 5100              mov A,[__r1]
 0168 08                push A
 0169 5100              mov A,[__r2]
 016B 08                push A
 016C 5100              mov A,[__r3]
 016E 08                push A
 016F 7C0000            xcall __fpsub
 0172 18                pop A
 0173 5300              mov [__r7],A
 0175 18                pop A
 0176 5300              mov [__r6],A
 0178 18                pop A
 0179 5300              mov [__r5],A
 017B 18                pop A
 017C 38FC              add SP,-4
 017E 08                push A
 017F 5100              mov A,[__r5]
 0181 08                push A
 0182 5100              mov A,[__r6]
 0184 08                push A
 0185 5100              mov A,[__r7]
 0187 08                push A
 0188 7C0000            xcall __fp2long
 018B 18                pop A
 018C 5300              mov [__r5],A
 018E 18                pop A
 018F 5300              mov [__r4],A
 0191 38FE              add SP,-2
 0193 5100              mov A,[__r5]
 0195 0100              add A,0
 0197 5401              mov [X+1],A
 0199 5100              mov A,[__r4]
 019B 0980              adc A,-128
 019D 5400              mov [X+0],A
 019F 8020              xjmp L5
 01A1           L4:
 01A1 5100              mov A,[__r0]
 01A3 08                push A
 01A4 5100              mov A,[__r1]
 01A6 08                push A
 01A7 5100              mov A,[__r2]
 01A9 08                push A
 01AA 5100              mov A,[__r3]
 01AC 08                push A
 01AD 7C0000            xcall __fp2long
 01B0 18                pop A
 01B1 5300              mov [__r1],A
 01B3 18                pop A
 01B4 5300              mov [__r0],A
 01B6 38FE              add SP,-2
 01B8 5100              mov A,[__r1]
 01BA 5401              mov [X+1],A
 01BC 5100              mov A,[__r0]
 01BE 5400              mov [X+0],A
 01C0           L5:
 01C0 5201              mov A,[X+1]
 01C2 10                push X
 01C3 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 01C6 20                pop X
 01C7                   .dbline 37
 01C7           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 01C7 52FC              mov A,[X-4]
 01C9 10                push X
 01CA 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 01CD 20                pop X
 01CE                   .dbline -2
 01CE           L2:
 01CE 38FE              add SP,-2
 01D0 20                pop X
 01D1                   .dbline 0 ; func end
 01D1 7F                ret
 01D2                   .dbsym l pulse -5 I
 01D2                   .dbend
 01D2                   .dbfunc e MoveBackward _MoveBackward fV
 01D2           ;          pulse -> X-5
 01D2           _MoveBackward::
 01D2                   .dbline -1
 01D2 10                push X
 01D3 4F                mov X,SP
 01D4 3802              add SP,2
 01D6                   .dbline 42
 01D6           ; }
 01D6           ; 
 01D6           ; //Kulkee taaksepäin arvolla
 01D6           ; void MoveBackward(int pulse)
 01D6           ; {
 01D6                   .dbline 43
 01D6           ;       PRT0GS &= ~LEFTFOW;
 01D6 5000              mov A,>_LEFTFOW
 01D8 10                push X
 01D9 5700              mov X,<_LEFTFOW
 01DB 08                push A
 01DC 28                romx
 01DD 18                pop A
 01DE 75                inc X
 01DF 0900              adc A,0
 01E1 28                romx
 01E2 20                pop X
 01E3 73                cpl A
 01E4 5300              mov [__r1],A
 01E6 5D02              mov A,REG[0x2]
 01E8 2200              and A,[__r1]
 01EA 6002              mov REG[0x2],A
 01EC                   .dbline 44
 01EC           ;       PRT0GS &= ~RIGHTFOW;
 01EC 5004              mov A,>_RIGHTFOW
 01EE 10                push X
 01EF 5704              mov X,<_RIGHTFOW
 01F1 08                push A
 01F2 28                romx
 01F3 18                pop A
 01F4 75                inc X
 01F5 0900              adc A,0
 01F7 28                romx
 01F8 20                pop X
 01F9 73                cpl A
 01FA 5300              mov [__r1],A
 01FC 5D02              mov A,REG[0x2]
 01FE 2200              and A,[__r1]
 0200 6002              mov REG[0x2],A
 0202                   .dbline 45
 0202           ;       PRT0GS |= LEFTBACK;
 0202 5002              mov A,>_LEFTBACK
 0204 10                push X
 0205 5702              mov X,<_LEFTBACK
 0207 08                push A
 0208 28                romx
 0209 18                pop A
 020A 75                inc X
 020B 0900              adc A,0
 020D 28                romx
 020E 5300              mov [__r1],A
 0210 20                pop X
 0211 5D02              mov A,REG[0x2]
 0213 2A00              or A,[__r1]
 0215 6002              mov REG[0x2],A
 0217                   .dbline 46
 0217           ;       PRT0GS |= RIGHTBACK;
 0217 5006              mov A,>_RIGHTBACK
 0219 10                push X
 021A 5706              mov X,<_RIGHTBACK
 021C 08                push A
 021D 28                romx
 021E 18                pop A
 021F 75                inc X
 0220 0900              adc A,0
 0222 28                romx
 0223 5300              mov [__r1],A
 0225 20                pop X
 0226 5D02              mov A,REG[0x2]
 0228 2A00              or A,[__r1]
 022A 6002              mov REG[0x2],A
 022C                   .dbline 48
 022C           ;       
 022C           ;       PWM8_VASEN_WritePulseWidth((BYTE)(pulse * OIKEUSKERROIN));
 022C 550008            mov [__r1],<_OIKEUSKERROIN
 022F 5008              mov A,>_OIKEUSKERROIN
 0231 10                push X
 0232 5800              mov X,[__r1]
 0234 08                push A
 0235 28                romx
 0236 5300              mov [__r0],A
 0238 18                pop A
 0239 75                inc X
 023A 0900              adc A,0
 023C 08                push A
 023D 28                romx
 023E 5300              mov [__r1],A
 0240 18                pop A
 0241 75                inc X
 0242 0900              adc A,0
 0244 08                push A
 0245 28                romx
 0246 5300              mov [__r2],A
 0248 18                pop A
 0249 75                inc X
 024A 0900              adc A,0
 024C 28                romx
 024D 5300              mov [__r3],A
 024F 20                pop X
 0250 52FC              mov A,[X-4]
 0252 5300              mov [__r7],A
 0254 52FB              mov A,[X-5]
 0256 5300              mov [__r6],A
 0258 470080            tst [__r6],-128
 025B A009              jz X3
 025D 5500FF            mov [__r5],-1
 0260 5500FF            mov [__r4],-1
 0263 8007              jmp X4
 0265           X3:
 0265 550000            mov [__r5],0
 0268 550000            mov [__r4],0
 026B           X4:
 026B 5100              mov A,[__r4]
 026D 08                push A
 026E 5100              mov A,[__r5]
 0270 08                push A
 0271 5100              mov A,[__r6]
 0273 08                push A
 0274 5100              mov A,[__r7]
 0276 08                push A
 0277 7C0000            xcall __long2fp
 027A 18                pop A
 027B 5300              mov [__r7],A
 027D 18                pop A
 027E 5300              mov [__r6],A
 0280 18                pop A
 0281 5300              mov [__r5],A
 0283 18                pop A
 0284 5300              mov [__r4],A
 0286 5100              mov A,[__r0]
 0288 08                push A
 0289 5100              mov A,[__r1]
 028B 08                push A
 028C 5100              mov A,[__r2]
 028E 08                push A
 028F 5100              mov A,[__r3]
 0291 08                push A
 0292 5100              mov A,[__r4]
 0294 08                push A
 0295 5100              mov A,[__r5]
 0297 08                push A
 0298 5100              mov A,[__r6]
 029A 08                push A
 029B 5100              mov A,[__r7]
 029D 08                push A
 029E 7C0000            xcall __fpmul
 02A1 18                pop A
 02A2 5300              mov [__r3],A
 02A4 18                pop A
 02A5 5300              mov [__r2],A
 02A7 18                pop A
 02A8 5300              mov [__r1],A
 02AA 18                pop A
 02AB 5300              mov [__r0],A
 02AD 38FC              add SP,-4
 02AF 5047              mov A,71
 02B1 08                push A
 02B2 5000              mov A,0
 02B4 08                push A
 02B5 08                push A
 02B6 08                push A
 02B7 5100              mov A,[__r0]
 02B9 08                push A
 02BA 5100              mov A,[__r1]
 02BC 08                push A
 02BD 5100              mov A,[__r2]
 02BF 08                push A
 02C0 5100              mov A,[__r3]
 02C2 08                push A
 02C3 7C0000            xcall __fpcmp
 02C6 38F8              add SP,-8
 02C8 39FF              cmp A,-1
 02CA A047              jz L8
 02CC 5047              mov A,71
 02CE 08                push A
 02CF 5000              mov A,0
 02D1 08                push A
 02D2 08                push A
 02D3 08                push A
 02D4 5100              mov A,[__r0]
 02D6 08                push A
 02D7 5100              mov A,[__r1]
 02D9 08                push A
 02DA 5100              mov A,[__r2]
 02DC 08                push A
 02DD 5100              mov A,[__r3]
 02DF 08                push A
 02E0 7C0000            xcall __fpsub
 02E3 18                pop A
 02E4 5300              mov [__r7],A
 02E6 18                pop A
 02E7 5300              mov [__r6],A
 02E9 18                pop A
 02EA 5300              mov [__r5],A
 02EC 18                pop A
 02ED 38FC              add SP,-4
 02EF 08                push A
 02F0 5100              mov A,[__r5]
 02F2 08                push A
 02F3 5100              mov A,[__r6]
 02F5 08                push A
 02F6 5100              mov A,[__r7]
 02F8 08                push A
 02F9 7C0000            xcall __fp2long
 02FC 18                pop A
 02FD 5300              mov [__r5],A
 02FF 18                pop A
 0300 5300              mov [__r4],A
 0302 38FE              add SP,-2
 0304 5100              mov A,[__r5]
 0306 0100              add A,0
 0308 5401              mov [X+1],A
 030A 5100              mov A,[__r4]
 030C 0980              adc A,-128
 030E 5400              mov [X+0],A
 0310 8020              xjmp L9
 0312           L8:
 0312 5100              mov A,[__r0]
 0314 08                push A
 0315 5100              mov A,[__r1]
 0317 08                push A
 0318 5100              mov A,[__r2]
 031A 08                push A
 031B 5100              mov A,[__r3]
 031D 08                push A
 031E 7C0000            xcall __fp2long
 0321 18                pop A
 0322 5300              mov [__r1],A
 0324 18                pop A
 0325 5300              mov [__r0],A
 0327 38FE              add SP,-2
 0329 5100              mov A,[__r1]
 032B 5401              mov [X+1],A
 032D 5100              mov A,[__r0]
 032F 5400              mov [X+0],A
 0331           L9:
 0331 5201              mov A,[X+1]
 0333 10                push X
 0334 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 0337 20                pop X
 0338                   .dbline 49
 0338           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 0338 52FC              mov A,[X-4]
 033A 10                push X
 033B 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 033E 20                pop X
 033F                   .dbline -2
 033F           L6:
 033F 38FE              add SP,-2
 0341 20                pop X
 0342                   .dbline 0 ; func end
 0342 7F                ret
 0343                   .dbsym l pulse -5 I
 0343                   .dbend
 0343                   .dbfunc e Stop _Stop fV
 0343           _Stop::
 0343                   .dbline -1
 0343                   .dbline 54
 0343           ; }
 0343           ; 
 0343           ; //Pysäyttää Moottorit
 0343           ; void Stop()
 0343           ; {
 0343                   .dbline 55
 0343           ;       PWM8_OIKEA_WritePulseWidth(0);
 0343 10                push X
 0344 5000              mov A,0
 0346 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 0349                   .dbline 56
 0349           ;       PWM8_VASEN_WritePulseWidth(0);
 0349 5000              mov A,0
 034B 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 034E 20                pop X
 034F                   .dbline 57
 034F           ;       PRT0GS &= ~LEFTBACK;
 034F 5002              mov A,>_LEFTBACK
 0351 10                push X
 0352 5702              mov X,<_LEFTBACK
 0354 08                push A
 0355 28                romx
 0356 18                pop A
 0357 75                inc X
 0358 0900              adc A,0
 035A 28                romx
 035B 20                pop X
 035C 73                cpl A
 035D 5300              mov [__r1],A
 035F 5D02              mov A,REG[0x2]
 0361 2200              and A,[__r1]
 0363 6002              mov REG[0x2],A
 0365                   .dbline 58
 0365           ;       PRT0GS &= ~RIGHTBACK;
 0365 5006              mov A,>_RIGHTBACK
 0367 10                push X
 0368 5706              mov X,<_RIGHTBACK
 036A 08                push A
 036B 28                romx
 036C 18                pop A
 036D 75                inc X
 036E 0900              adc A,0
 0370 28                romx
 0371 20                pop X
 0372 73                cpl A
 0373 5300              mov [__r1],A
 0375 5D02              mov A,REG[0x2]
 0377 2200              and A,[__r1]
 0379 6002              mov REG[0x2],A
 037B                   .dbline 59
 037B           ;       PRT0GS &= ~LEFTFOW;
 037B 5000              mov A,>_LEFTFOW
 037D 10                push X
 037E 5700              mov X,<_LEFTFOW
 0380 08                push A
 0381 28                romx
 0382 18                pop A
 0383 75                inc X
 0384 0900              adc A,0
 0386 28                romx
 0387 20                pop X
 0388 73                cpl A
 0389 5300              mov [__r1],A
 038B 5D02              mov A,REG[0x2]
 038D 2200              and A,[__r1]
 038F 6002              mov REG[0x2],A
 0391                   .dbline 60
 0391           ;       PRT0GS &= ~RIGHTFOW;
 0391 5004              mov A,>_RIGHTFOW
 0393 10                push X
 0394 5704              mov X,<_RIGHTFOW
 0396 08                push A
 0397 28                romx
 0398 18                pop A
 0399 75                inc X
 039A 0900              adc A,0
 039C 28                romx
 039D 20                pop X
 039E 73                cpl A
 039F 5300              mov [__r1],A
 03A1 5D02              mov A,REG[0x2]
 03A3 2200              and A,[__r1]
 03A5 6002              mov REG[0x2],A
 03A7                   .dbline -2
 03A7           L10:
 03A7                   .dbline 0 ; func end
 03A7 7F                ret
 03A8                   .dbend
 03A8                   .dbfunc e TurnLeft _TurnLeft fV
 03A8           ;          pulse -> X-5
 03A8           _TurnLeft::
 03A8                   .dbline -1
 03A8 10                push X
 03A9 4F                mov X,SP
 03AA 3802              add SP,2
 03AC                   .dbline 65
 03AC           ; }
 03AC           ; 
 03AC           ; //Kääntyy vasemmalle
 03AC           ; void TurnLeft(int pulse)
 03AC           ; {
 03AC                   .dbline 66
 03AC           ;       PRT0GS &= ~LEFTBACK;
 03AC 5002              mov A,>_LEFTBACK
 03AE 10                push X
 03AF 5702              mov X,<_LEFTBACK
 03B1 08                push A
 03B2 28                romx
 03B3 18                pop A
 03B4 75                inc X
 03B5 0900              adc A,0
 03B7 28                romx
 03B8 20                pop X
 03B9 73                cpl A
 03BA 5300              mov [__r1],A
 03BC 5D02              mov A,REG[0x2]
 03BE 2200              and A,[__r1]
 03C0 6002              mov REG[0x2],A
 03C2                   .dbline 67
 03C2           ;       PRT0GS |= LEFTFOW;
 03C2 5000              mov A,>_LEFTFOW
 03C4 10                push X
 03C5 5700              mov X,<_LEFTFOW
 03C7 08                push A
 03C8 28                romx
 03C9 18                pop A
 03CA 75                inc X
 03CB 0900              adc A,0
 03CD 28                romx
 03CE 5300              mov [__r1],A
 03D0 20                pop X
 03D1 5D02              mov A,REG[0x2]
 03D3 2A00              or A,[__r1]
 03D5 6002              mov REG[0x2],A
 03D7                   .dbline 68
 03D7           ;       PRT0GS &= ~RIGHTFOW;
 03D7 5004              mov A,>_RIGHTFOW
 03D9 10                push X
 03DA 5704              mov X,<_RIGHTFOW
 03DC 08                push A
 03DD 28                romx
 03DE 18                pop A
 03DF 75                inc X
 03E0 0900              adc A,0
 03E2 28                romx
 03E3 20                pop X
 03E4 73                cpl A
 03E5 5300              mov [__r1],A
 03E7 5D02              mov A,REG[0x2]
 03E9 2200              and A,[__r1]
 03EB 6002              mov REG[0x2],A
 03ED                   .dbline 69
 03ED           ;       PRT0GS |= RIGHTBACK;
 03ED 5006              mov A,>_RIGHTBACK
 03EF 10                push X
 03F0 5706              mov X,<_RIGHTBACK
 03F2 08                push A
 03F3 28                romx
 03F4 18                pop A
 03F5 75                inc X
 03F6 0900              adc A,0
 03F8 28                romx
 03F9 5300              mov [__r1],A
 03FB 20                pop X
 03FC 5D02              mov A,REG[0x2]
 03FE 2A00              or A,[__r1]
 0400 6002              mov REG[0x2],A
 0402                   .dbline 71
 0402           ;               
 0402           ;       PWM8_VASEN_WritePulseWidth((BYTE)(pulse * OIKEUSKERROIN));
 0402 550008            mov [__r1],<_OIKEUSKERROIN
 0405 5008              mov A,>_OIKEUSKERROIN
 0407 10                push X
 0408 5800              mov X,[__r1]
 040A 08                push A
 040B 28                romx
 040C 5300              mov [__r0],A
 040E 18                pop A
 040F 75                inc X
 0410 0900              adc A,0
 0412 08                push A
 0413 28                romx
 0414 5300              mov [__r1],A
 0416 18                pop A
 0417 75                inc X
 0418 0900              adc A,0
 041A 08                push A
 041B 28                romx
 041C 5300              mov [__r2],A
 041E 18                pop A
 041F 75                inc X
 0420 0900              adc A,0
 0422 28                romx
 0423 5300              mov [__r3],A
 0425 20                pop X
 0426 52FC              mov A,[X-4]
 0428 5300              mov [__r7],A
 042A 52FB              mov A,[X-5]
 042C 5300              mov [__r6],A
 042E 470080            tst [__r6],-128
 0431 A009              jz X6
 0433 5500FF            mov [__r5],-1
 0436 5500FF            mov [__r4],-1
 0439 8007              jmp X7
 043B           X6:
 043B 550000            mov [__r5],0
 043E 550000            mov [__r4],0
 0441           X7:
 0441 5100              mov A,[__r4]
 0443 08                push A
 0444 5100              mov A,[__r5]
 0446 08                push A
 0447 5100              mov A,[__r6]
 0449 08                push A
 044A 5100              mov A,[__r7]
 044C 08                push A
 044D 7C0000            xcall __long2fp
 0450 18                pop A
 0451 5300              mov [__r7],A
 0453 18                pop A
 0454 5300              mov [__r6],A
 0456 18                pop A
 0457 5300              mov [__r5],A
 0459 18                pop A
 045A 5300              mov [__r4],A
 045C 5100              mov A,[__r0]
 045E 08                push A
 045F 5100              mov A,[__r1]
 0461 08                push A
 0462 5100              mov A,[__r2]
 0464 08                push A
 0465 5100              mov A,[__r3]
 0467 08                push A
 0468 5100              mov A,[__r4]
 046A 08                push A
 046B 5100              mov A,[__r5]
 046D 08                push A
 046E 5100              mov A,[__r6]
 0470 08                push A
 0471 5100              mov A,[__r7]
 0473 08                push A
 0474 7C0000            xcall __fpmul
 0477 18                pop A
 0478 5300              mov [__r3],A
 047A 18                pop A
 047B 5300              mov [__r2],A
 047D 18                pop A
 047E 5300              mov [__r1],A
 0480 18                pop A
 0481 5300              mov [__r0],A
 0483 38FC              add SP,-4
 0485 5047              mov A,71
 0487 08                push A
 0488 5000              mov A,0
 048A 08                push A
 048B 08                push A
 048C 08                push A
 048D 5100              mov A,[__r0]
 048F 08                push A
 0490 5100              mov A,[__r1]
 0492 08                push A
 0493 5100              mov A,[__r2]
 0495 08                push A
 0496 5100              mov A,[__r3]
 0498 08                push A
 0499 7C0000            xcall __fpcmp
 049C 38F8              add SP,-8
 049E 39FF              cmp A,-1
 04A0 A047              jz L13
 04A2 5047              mov A,71
 04A4 08                push A
 04A5 5000              mov A,0
 04A7 08                push A
 04A8 08                push A
 04A9 08                push A
 04AA 5100              mov A,[__r0]
 04AC 08                push A
 04AD 5100              mov A,[__r1]
 04AF 08                push A
 04B0 5100              mov A,[__r2]
 04B2 08                push A
 04B3 5100              mov A,[__r3]
 04B5 08                push A
 04B6 7C0000            xcall __fpsub
 04B9 18                pop A
 04BA 5300              mov [__r7],A
 04BC 18                pop A
 04BD 5300              mov [__r6],A
 04BF 18                pop A
 04C0 5300              mov [__r5],A
 04C2 18                pop A
 04C3 38FC              add SP,-4
 04C5 08                push A
 04C6 5100              mov A,[__r5]
 04C8 08                push A
 04C9 5100              mov A,[__r6]
 04CB 08                push A
 04CC 5100              mov A,[__r7]
 04CE 08                push A
 04CF 7C0000            xcall __fp2long
 04D2 18                pop A
 04D3 5300              mov [__r5],A
 04D5 18                pop A
 04D6 5300              mov [__r4],A
 04D8 38FE              add SP,-2
 04DA 5100              mov A,[__r5]
 04DC 0100              add A,0
 04DE 5401              mov [X+1],A
 04E0 5100              mov A,[__r4]
 04E2 0980              adc A,-128
 04E4 5400              mov [X+0],A
 04E6 8020              xjmp L14
 04E8           L13:
 04E8 5100              mov A,[__r0]
 04EA 08                push A
 04EB 5100              mov A,[__r1]
 04ED 08                push A
 04EE 5100              mov A,[__r2]
 04F0 08                push A
 04F1 5100              mov A,[__r3]
 04F3 08                push A
 04F4 7C0000            xcall __fp2long
 04F7 18                pop A
 04F8 5300              mov [__r1],A
 04FA 18                pop A
 04FB 5300              mov [__r0],A
 04FD 38FE              add SP,-2
 04FF 5100              mov A,[__r1]
 0501 5401              mov [X+1],A
 0503 5100              mov A,[__r0]
 0505 5400              mov [X+0],A
 0507           L14:
 0507 5201              mov A,[X+1]
 0509 10                push X
 050A 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 050D 20                pop X
 050E                   .dbline 72
 050E           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 050E 52FC              mov A,[X-4]
 0510 10                push X
 0511 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 0514 20                pop X
 0515                   .dbline -2
 0515           L11:
 0515 38FE              add SP,-2
 0517 20                pop X
 0518                   .dbline 0 ; func end
 0518 7F                ret
 0519                   .dbsym l pulse -5 I
 0519                   .dbend
 0519                   .dbfunc e TurnRight _TurnRight fV
 0519           ;          pulse -> X-5
 0519           _TurnRight::
 0519                   .dbline -1
 0519 10                push X
 051A 4F                mov X,SP
 051B 3802              add SP,2
 051D                   .dbline 77
 051D           ; }
 051D           ; 
 051D           ; //Kääntyy oikealle
 051D           ; void TurnRight(int pulse)
 051D           ; {
 051D                   .dbline 78
 051D           ;       PRT0GS |= LEFTBACK;
 051D 5002              mov A,>_LEFTBACK
 051F 10                push X
 0520 5702              mov X,<_LEFTBACK
 0522 08                push A
 0523 28                romx
 0524 18                pop A
 0525 75                inc X
 0526 0900              adc A,0
 0528 28                romx
 0529 5300              mov [__r1],A
 052B 20                pop X
 052C 5D02              mov A,REG[0x2]
 052E 2A00              or A,[__r1]
 0530 6002              mov REG[0x2],A
 0532                   .dbline 79
 0532           ;       PRT0GS &= ~LEFTFOW;
 0532 5000              mov A,>_LEFTFOW
 0534 10                push X
 0535 5700              mov X,<_LEFTFOW
 0537 08                push A
 0538 28                romx
 0539 18                pop A
 053A 75                inc X
 053B 0900              adc A,0
 053D 28                romx
 053E 20                pop X
 053F 73                cpl A
 0540 5300              mov [__r1],A
 0542 5D02              mov A,REG[0x2]
 0544 2200              and A,[__r1]
 0546 6002              mov REG[0x2],A
 0548                   .dbline 80
 0548           ;       PRT0GS |= RIGHTFOW;
 0548 5004              mov A,>_RIGHTFOW
 054A 10                push X
 054B 5704              mov X,<_RIGHTFOW
 054D 08                push A
 054E 28                romx
 054F 18                pop A
 0550 75                inc X
 0551 0900              adc A,0
 0553 28                romx
 0554 5300              mov [__r1],A
 0556 20                pop X
 0557 5D02              mov A,REG[0x2]
 0559 2A00              or A,[__r1]
 055B 6002              mov REG[0x2],A
 055D                   .dbline 81
 055D           ;       PRT0GS &= ~RIGHTBACK;
 055D 5006              mov A,>_RIGHTBACK
 055F 10                push X
 0560 5706              mov X,<_RIGHTBACK
 0562 08                push A
 0563 28                romx
 0564 18                pop A
 0565 75                inc X
 0566 0900              adc A,0
 0568 28                romx
 0569 20                pop X
 056A 73                cpl A
 056B 5300              mov [__r1],A
 056D 5D02              mov A,REG[0x2]
 056F 2200              and A,[__r1]
 0571 6002              mov REG[0x2],A
 0573                   .dbline 83
 0573           ;       
 0573           ;       PWM8_VASEN_WritePulseWidth((BYTE)(pulse * OIKEUSKERROIN));
 0573 550008            mov [__r1],<_OIKEUSKERROIN
 0576 5008              mov A,>_OIKEUSKERROIN
 0578 10                push X
 0579 5800              mov X,[__r1]
 057B 08                push A
 057C 28                romx
 057D 5300              mov [__r0],A
 057F 18                pop A
 0580 75                inc X
 0581 0900              adc A,0
 0583 08                push A
 0584 28                romx
 0585 5300              mov [__r1],A
 0587 18                pop A
 0588 75                inc X
 0589 0900              adc A,0
 058B 08                push A
 058C 28                romx
 058D 5300              mov [__r2],A
 058F 18                pop A
 0590 75                inc X
 0591 0900              adc A,0
 0593 28                romx
 0594 5300              mov [__r3],A
 0596 20                pop X
 0597 52FC              mov A,[X-4]
 0599 5300              mov [__r7],A
 059B 52FB              mov A,[X-5]
 059D 5300              mov [__r6],A
 059F 470080            tst [__r6],-128
 05A2 A009              jz X9
 05A4 5500FF            mov [__r5],-1
 05A7 5500FF            mov [__r4],-1
 05AA 8007              jmp X10
 05AC           X9:
 05AC 550000            mov [__r5],0
 05AF 550000            mov [__r4],0
 05B2           X10:
 05B2 5100              mov A,[__r4]
 05B4 08                push A
 05B5 5100              mov A,[__r5]
 05B7 08                push A
 05B8 5100              mov A,[__r6]
 05BA 08                push A
 05BB 5100              mov A,[__r7]
 05BD 08                push A
 05BE 7C0000            xcall __long2fp
 05C1 18                pop A
 05C2 5300              mov [__r7],A
 05C4 18                pop A
 05C5 5300              mov [__r6],A
 05C7 18                pop A
 05C8 5300              mov [__r5],A
 05CA 18                pop A
 05CB 5300              mov [__r4],A
 05CD 5100              mov A,[__r0]
 05CF 08                push A
 05D0 5100              mov A,[__r1]
 05D2 08                push A
 05D3 5100              mov A,[__r2]
 05D5 08                push A
 05D6 5100              mov A,[__r3]
 05D8 08                push A
 05D9 5100              mov A,[__r4]
 05DB 08                push A
 05DC 5100              mov A,[__r5]
 05DE 08                push A
 05DF 5100              mov A,[__r6]
 05E1 08                push A
 05E2 5100              mov A,[__r7]
 05E4 08                push A
 05E5 7C0000            xcall __fpmul
 05E8 18                pop A
 05E9 5300              mov [__r3],A
 05EB 18                pop A
 05EC 5300              mov [__r2],A
 05EE 18                pop A
 05EF 5300              mov [__r1],A
 05F1 18                pop A
 05F2 5300              mov [__r0],A
 05F4 38FC              add SP,-4
 05F6 5047              mov A,71
 05F8 08                push A
 05F9 5000              mov A,0
 05FB 08                push A
 05FC 08                push A
 05FD 08                push A
 05FE 5100              mov A,[__r0]
 0600 08                push A
 0601 5100              mov A,[__r1]
 0603 08                push A
 0604 5100              mov A,[__r2]
 0606 08                push A
 0607 5100              mov A,[__r3]
 0609 08                push A
 060A 7C0000            xcall __fpcmp
 060D 38F8              add SP,-8
 060F 39FF              cmp A,-1
 0611 A047              jz L17
 0613 5047              mov A,71
 0615 08                push A
 0616 5000              mov A,0
 0618 08                push A
 0619 08                push A
 061A 08                push A
 061B 5100              mov A,[__r0]
 061D 08                push A
 061E 5100              mov A,[__r1]
 0620 08                push A
 0621 5100              mov A,[__r2]
 0623 08                push A
 0624 5100              mov A,[__r3]
 0626 08                push A
 0627 7C0000            xcall __fpsub
 062A 18                pop A
 062B 5300              mov [__r7],A
 062D 18                pop A
 062E 5300              mov [__r6],A
 0630 18                pop A
 0631 5300              mov [__r5],A
 0633 18                pop A
 0634 38FC              add SP,-4
 0636 08                push A
 0637 5100              mov A,[__r5]
 0639 08                push A
 063A 5100              mov A,[__r6]
 063C 08                push A
 063D 5100              mov A,[__r7]
 063F 08                push A
 0640 7C0000            xcall __fp2long
 0643 18                pop A
 0644 5300              mov [__r5],A
 0646 18                pop A
 0647 5300              mov [__r4],A
 0649 38FE              add SP,-2
 064B 5100              mov A,[__r5]
 064D 0100              add A,0
 064F 5401              mov [X+1],A
 0651 5100              mov A,[__r4]
 0653 0980              adc A,-128
 0655 5400              mov [X+0],A
 0657 8020              xjmp L18
 0659           L17:
 0659 5100              mov A,[__r0]
 065B 08                push A
 065C 5100              mov A,[__r1]
 065E 08                push A
 065F 5100              mov A,[__r2]
 0661 08                push A
 0662 5100              mov A,[__r3]
 0664 08                push A
 0665 7C0000            xcall __fp2long
 0668 18                pop A
 0669 5300              mov [__r1],A
 066B 18                pop A
 066C 5300              mov [__r0],A
 066E 38FE              add SP,-2
 0670 5100              mov A,[__r1]
 0672 5401              mov [X+1],A
 0674 5100              mov A,[__r0]
 0676 5400              mov [X+0],A
 0678           L18:
 0678 5201              mov A,[X+1]
 067A 10                push X
 067B 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 067E 20                pop X
 067F                   .dbline 84
 067F           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 067F 52FC              mov A,[X-4]
 0681 10                push X
 0682 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 0685 20                pop X
 0686                   .dbline -2
 0686           L15:
 0686 38FE              add SP,-2
 0688 20                pop X
 0689                   .dbline 0 ; func end
 0689 7F                ret
 068A                   .dbsym l pulse -5 I
 068A                   .dbend
 068A                   .dbfunc e TestTurnRight _TestTurnRight fV
 068A           ;          pulse -> X-5
 068A           _TestTurnRight::
 068A                   .dbline -1
 068A 10                push X
 068B 4F                mov X,SP
 068C                   .dbline 89
 068C           ; }
 068C           ; 
 068C           ; //TEST RIGHTTURN
 068C           ; void TestTurnRight(int pulse)
 068C           ; {
 068C                   .dbline 90
 068C           ;       PRT0GS &= ~LEFTBACK;
 068C 5002              mov A,>_LEFTBACK
 068E 10                push X
 068F 5702              mov X,<_LEFTBACK
 0691 08                push A
 0692 28                romx
 0693 18                pop A
 0694 75                inc X
 0695 0900              adc A,0
 0697 28                romx
 0698 20                pop X
 0699 73                cpl A
 069A 5300              mov [__r1],A
 069C 5D02              mov A,REG[0x2]
 069E 2200              and A,[__r1]
 06A0 6002              mov REG[0x2],A
 06A2                   .dbline 91
 06A2           ;       PRT0GS &= ~LEFTFOW;
 06A2 5000              mov A,>_LEFTFOW
 06A4 10                push X
 06A5 5700              mov X,<_LEFTFOW
 06A7 08                push A
 06A8 28                romx
 06A9 18                pop A
 06AA 75                inc X
 06AB 0900              adc A,0
 06AD 28                romx
 06AE 20                pop X
 06AF 73                cpl A
 06B0 5300              mov [__r1],A
 06B2 5D02              mov A,REG[0x2]
 06B4 2200              and A,[__r1]
 06B6 6002              mov REG[0x2],A
 06B8                   .dbline 92
 06B8           ;       PRT0GS |= RIGHTFOW;
 06B8 5004              mov A,>_RIGHTFOW
 06BA 10                push X
 06BB 5704              mov X,<_RIGHTFOW
 06BD 08                push A
 06BE 28                romx
 06BF 18                pop A
 06C0 75                inc X
 06C1 0900              adc A,0
 06C3 28                romx
 06C4 5300              mov [__r1],A
 06C6 20                pop X
 06C7 5D02              mov A,REG[0x2]
 06C9 2A00              or A,[__r1]
 06CB 6002              mov REG[0x2],A
 06CD                   .dbline 93
 06CD           ;       PRT0GS &= ~RIGHTBACK;
 06CD 5006              mov A,>_RIGHTBACK
 06CF 10                push X
 06D0 5706              mov X,<_RIGHTBACK
 06D2 08                push A
 06D3 28                romx
 06D4 18                pop A
 06D5 75                inc X
 06D6 0900              adc A,0
 06D8 28                romx
 06D9 20                pop X
 06DA 73                cpl A
 06DB 5300              mov [__r1],A
 06DD 5D02              mov A,REG[0x2]
 06DF 2200              and A,[__r1]
 06E1 6002              mov REG[0x2],A
 06E3                   .dbline 96
 06E3           ;       
 06E3           ;       //PWM8_VASEN_WritePulseWidth((BYTE)(pulse * OIKEUSKERROIN));
 06E3           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 06E3 52FC              mov A,[X-4]
 06E5 10                push X
 06E6 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 06E9 20                pop X
 06EA                   .dbline -2
 06EA           L19:
 06EA 20                pop X
 06EB                   .dbline 0 ; func end
 06EB 7F                ret
 06EC                   .dbsym l pulse -5 I
 06EC                   .dbend
