                        .module motorcontrol.c
                        .area text(rom, con, rel)
 0000                   .dbfile ./motorcontrol.c
                        .area lit(rom, con, rel, lit)
 0000           _OIKEUSKERROIN::
 0000 3F800000          .word 0x3f80,0x0
 0004                   .dbfile Z:\Robo\Roobbo\Robor7\ROBOTT~1\ROBOTT~1\motorcontrol.c
 0004                   .dbsym e OIKEUSKERROIN _OIKEUSKERROIN kD
                        .area text(rom, con, rel)
 0000                   .dbfile Z:\Robo\Roobbo\Robor7\ROBOTT~1\ROBOTT~1\motorcontrol.c
 0000                   .dbfunc e InitPWM _InitPWM fV
 0000           _InitPWM::
 0000                   .dbline -1
 0000                   .dbline 20
 0000           ; #include <m8c.h>        // part specific constants and macros
 0000           ; #include "PSoCAPI.h"    // PSoC API definitions for all User Modules
 0000           ; 
 0000           ; #define BACKWARD      0b00000101; // Molemmat Eteen
 0000           ; #define FORWARD       0b00001010; //Molemmat Taakse
 0000           ; #define LEFTBRIGHTF 0b00001001; // Vasen Eteen Oikea Taakse
 0000           ; #define LEFTFRIGHTB 0b00000110; // Vasen Taakse Oikea Eteen
 0000           ; #define NOLLAA                0b11110000;             //Molemmat C/D pinnit 0
 0000           ; 
 0000           ; //Porttien osoitteet
 0000           ; //Port1_0 LEFTC      C = 1, D = 0 FORWARD
 0000           ; //Port1_1 LEFTD                C = 0, D = 1 BACKWARD 
 0000           ; //Port1_2 RIGHTC
 0000           ; //Port1_3 RIGHTD
 0000           ; 
 0000           ; const float OIKEUSKERROIN = 1.0f; //Kerroin vasemalle puolelle jotta robotti kulkisi suoraan
 0000           ; 
 0000           ; //Käynnistää PWM Moduulit
 0000           ; void InitPWM(void)
 0000           ; {
 0000                   .dbline 21
 0000           ;       PWM8_VASEN_Start();
 0000 10                push X
 0001 7C0000            xcall _PWM8_VASEN_Start
 0004                   .dbline 22
 0004           ;       PWM8_OIKEA_Start();
 0004 7C0000            xcall _PWM8_OIKEA_Start
 0007 20                pop X
 0008                   .dbline -2
 0008           L1:
 0008                   .dbline 0 ; func end
 0008 7F                ret
 0009                   .dbend
 0009                   .dbfunc e MoveForward _MoveForward fV
 0009           ;          pulse -> X-5
 0009           _MoveForward::
 0009                   .dbline -1
 0009 10                push X
 000A 4F                mov X,SP
 000B 3802              add SP,2
 000D                   .dbline 30
 000D           ;       
 000D           ;       //Port1_Data_ADDR = LEFTC_Data_ADDR;
 000D           ;       //Port1_Data_ADDR &= NOLLAA;
 000D           ; }
 000D           ; 
 000D           ; //Kulkee eteenpäin arvolla..
 000D           ; void MoveForward(int pulse)
 000D           ; {                             
 000D                   .dbline 31
 000D           ;       LEFTC_Data_ADDR &= NOLLAA;
 000D 4104F0            and REG[0x4],-16
 0010                   .dbline 31
 0010                   .dbline 32
 0010           ;       LEFTC_Data_ADDR |= FORWARD;
 0010 43040A            or REG[0x4],10
 0013                   .dbline 32
 0013                   .dbline 34
 0013           ; 
 0013           ;       PWM8_VASEN_WritePulseWidth((BYTE)(pulse * OIKEUSKERROIN));
 0013 550000            mov [__r1],<_OIKEUSKERROIN
 0016 5000              mov A,>_OIKEUSKERROIN
 0018 10                push X
 0019 5800              mov X,[__r1]
 001B 08                push A
 001C 28                romx
 001D 5300              mov [__r0],A
 001F 18                pop A
 0020 75                inc X
 0021 0900              adc A,0
 0023 08                push A
 0024 28                romx
 0025 5300              mov [__r1],A
 0027 18                pop A
 0028 75                inc X
 0029 0900              adc A,0
 002B 08                push A
 002C 28                romx
 002D 5300              mov [__r2],A
 002F 18                pop A
 0030 75                inc X
 0031 0900              adc A,0
 0033 28                romx
 0034 5300              mov [__r3],A
 0036 20                pop X
 0037 52FC              mov A,[X-4]
 0039 5300              mov [__r7],A
 003B 52FB              mov A,[X-5]
 003D 5300              mov [__r6],A
 003F 470080            tst [__r6],-128
 0042 A009              jz X0
 0044 5500FF            mov [__r5],-1
 0047 5500FF            mov [__r4],-1
 004A 8007              jmp X1
 004C           X0:
 004C 550000            mov [__r5],0
 004F 550000            mov [__r4],0
 0052           X1:
 0052 5100              mov A,[__r4]
 0054 08                push A
 0055 5100              mov A,[__r5]
 0057 08                push A
 0058 5100              mov A,[__r6]
 005A 08                push A
 005B 5100              mov A,[__r7]
 005D 08                push A
 005E 7C0000            xcall __long2fp
 0061 18                pop A
 0062 5300              mov [__r7],A
 0064 18                pop A
 0065 5300              mov [__r6],A
 0067 18                pop A
 0068 5300              mov [__r5],A
 006A 18                pop A
 006B 5300              mov [__r4],A
 006D 5100              mov A,[__r0]
 006F 08                push A
 0070 5100              mov A,[__r1]
 0072 08                push A
 0073 5100              mov A,[__r2]
 0075 08                push A
 0076 5100              mov A,[__r3]
 0078 08                push A
 0079 5100              mov A,[__r4]
 007B 08                push A
 007C 5100              mov A,[__r5]
 007E 08                push A
 007F 5100              mov A,[__r6]
 0081 08                push A
 0082 5100              mov A,[__r7]
 0084 08                push A
 0085 7C0000            xcall __fpmul
 0088 18                pop A
 0089 5300              mov [__r3],A
 008B 18                pop A
 008C 5300              mov [__r2],A
 008E 18                pop A
 008F 5300              mov [__r1],A
 0091 18                pop A
 0092 5300              mov [__r0],A
 0094 38FC              add SP,-4
 0096 5047              mov A,71
 0098 08                push A
 0099 5000              mov A,0
 009B 08                push A
 009C 08                push A
 009D 08                push A
 009E 5100              mov A,[__r0]
 00A0 08                push A
 00A1 5100              mov A,[__r1]
 00A3 08                push A
 00A4 5100              mov A,[__r2]
 00A6 08                push A
 00A7 5100              mov A,[__r3]
 00A9 08                push A
 00AA 7C0000            xcall __fpcmp
 00AD 38F8              add SP,-8
 00AF 39FF              cmp A,-1
 00B1 A047              jz L4
 00B3 5047              mov A,71
 00B5 08                push A
 00B6 5000              mov A,0
 00B8 08                push A
 00B9 08                push A
 00BA 08                push A
 00BB 5100              mov A,[__r0]
 00BD 08                push A
 00BE 5100              mov A,[__r1]
 00C0 08                push A
 00C1 5100              mov A,[__r2]
 00C3 08                push A
 00C4 5100              mov A,[__r3]
 00C6 08                push A
 00C7 7C0000            xcall __fpsub
 00CA 18                pop A
 00CB 5300              mov [__r7],A
 00CD 18                pop A
 00CE 5300              mov [__r6],A
 00D0 18                pop A
 00D1 5300              mov [__r5],A
 00D3 18                pop A
 00D4 38FC              add SP,-4
 00D6 08                push A
 00D7 5100              mov A,[__r5]
 00D9 08                push A
 00DA 5100              mov A,[__r6]
 00DC 08                push A
 00DD 5100              mov A,[__r7]
 00DF 08                push A
 00E0 7C0000            xcall __fp2long
 00E3 18                pop A
 00E4 5300              mov [__r5],A
 00E6 18                pop A
 00E7 5300              mov [__r4],A
 00E9 38FE              add SP,-2
 00EB 5100              mov A,[__r5]
 00ED 0100              add A,0
 00EF 5401              mov [X+1],A
 00F1 5100              mov A,[__r4]
 00F3 0980              adc A,-128
 00F5 5400              mov [X+0],A
 00F7 8020              xjmp L5
 00F9           L4:
 00F9 5100              mov A,[__r0]
 00FB 08                push A
 00FC 5100              mov A,[__r1]
 00FE 08                push A
 00FF 5100              mov A,[__r2]
 0101 08                push A
 0102 5100              mov A,[__r3]
 0104 08                push A
 0105 7C0000            xcall __fp2long
 0108 18                pop A
 0109 5300              mov [__r1],A
 010B 18                pop A
 010C 5300              mov [__r0],A
 010E 38FE              add SP,-2
 0110 5100              mov A,[__r1]
 0112 5401              mov [X+1],A
 0114 5100              mov A,[__r0]
 0116 5400              mov [X+0],A
 0118           L5:
 0118 5201              mov A,[X+1]
 011A 10                push X
 011B 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 011E 20                pop X
 011F                   .dbline 35
 011F           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 011F 52FC              mov A,[X-4]
 0121 10                push X
 0122 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 0125 20                pop X
 0126                   .dbline -2
 0126           L2:
 0126 38FE              add SP,-2
 0128 20                pop X
 0129                   .dbline 0 ; func end
 0129 7F                ret
 012A                   .dbsym l pulse -5 I
 012A                   .dbend
 012A                   .dbfunc e MoveBackward _MoveBackward fV
 012A           ;          pulse -> X-5
 012A           _MoveBackward::
 012A                   .dbline -1
 012A 10                push X
 012B 4F                mov X,SP
 012C 3802              add SP,2
 012E                   .dbline 40
 012E           ; }
 012E           ; 
 012E           ; //Kulkee taaksepäin arvolla
 012E           ; void MoveBackward(int pulse)
 012E           ; {
 012E                   .dbline 41
 012E           ;       LEFTC_Data_ADDR &= NOLLAA;
 012E 4104F0            and REG[0x4],-16
 0131                   .dbline 41
 0131                   .dbline 42
 0131           ;       LEFTC_Data_ADDR |= BACKWARD;
 0131 430405            or REG[0x4],5
 0134                   .dbline 42
 0134                   .dbline 44
 0134           ;       
 0134           ;       PWM8_VASEN_WritePulseWidth((BYTE)(pulse * OIKEUSKERROIN));
 0134 550000            mov [__r1],<_OIKEUSKERROIN
 0137 5000              mov A,>_OIKEUSKERROIN
 0139 10                push X
 013A 5800              mov X,[__r1]
 013C 08                push A
 013D 28                romx
 013E 5300              mov [__r0],A
 0140 18                pop A
 0141 75                inc X
 0142 0900              adc A,0
 0144 08                push A
 0145 28                romx
 0146 5300              mov [__r1],A
 0148 18                pop A
 0149 75                inc X
 014A 0900              adc A,0
 014C 08                push A
 014D 28                romx
 014E 5300              mov [__r2],A
 0150 18                pop A
 0151 75                inc X
 0152 0900              adc A,0
 0154 28                romx
 0155 5300              mov [__r3],A
 0157 20                pop X
 0158 52FC              mov A,[X-4]
 015A 5300              mov [__r7],A
 015C 52FB              mov A,[X-5]
 015E 5300              mov [__r6],A
 0160 470080            tst [__r6],-128
 0163 A009              jz X3
 0165 5500FF            mov [__r5],-1
 0168 5500FF            mov [__r4],-1
 016B 8007              jmp X4
 016D           X3:
 016D 550000            mov [__r5],0
 0170 550000            mov [__r4],0
 0173           X4:
 0173 5100              mov A,[__r4]
 0175 08                push A
 0176 5100              mov A,[__r5]
 0178 08                push A
 0179 5100              mov A,[__r6]
 017B 08                push A
 017C 5100              mov A,[__r7]
 017E 08                push A
 017F 7C0000            xcall __long2fp
 0182 18                pop A
 0183 5300              mov [__r7],A
 0185 18                pop A
 0186 5300              mov [__r6],A
 0188 18                pop A
 0189 5300              mov [__r5],A
 018B 18                pop A
 018C 5300              mov [__r4],A
 018E 5100              mov A,[__r0]
 0190 08                push A
 0191 5100              mov A,[__r1]
 0193 08                push A
 0194 5100              mov A,[__r2]
 0196 08                push A
 0197 5100              mov A,[__r3]
 0199 08                push A
 019A 5100              mov A,[__r4]
 019C 08                push A
 019D 5100              mov A,[__r5]
 019F 08                push A
 01A0 5100              mov A,[__r6]
 01A2 08                push A
 01A3 5100              mov A,[__r7]
 01A5 08                push A
 01A6 7C0000            xcall __fpmul
 01A9 18                pop A
 01AA 5300              mov [__r3],A
 01AC 18                pop A
 01AD 5300              mov [__r2],A
 01AF 18                pop A
 01B0 5300              mov [__r1],A
 01B2 18                pop A
 01B3 5300              mov [__r0],A
 01B5 38FC              add SP,-4
 01B7 5047              mov A,71
 01B9 08                push A
 01BA 5000              mov A,0
 01BC 08                push A
 01BD 08                push A
 01BE 08                push A
 01BF 5100              mov A,[__r0]
 01C1 08                push A
 01C2 5100              mov A,[__r1]
 01C4 08                push A
 01C5 5100              mov A,[__r2]
 01C7 08                push A
 01C8 5100              mov A,[__r3]
 01CA 08                push A
 01CB 7C0000            xcall __fpcmp
 01CE 38F8              add SP,-8
 01D0 39FF              cmp A,-1
 01D2 A047              jz L8
 01D4 5047              mov A,71
 01D6 08                push A
 01D7 5000              mov A,0
 01D9 08                push A
 01DA 08                push A
 01DB 08                push A
 01DC 5100              mov A,[__r0]
 01DE 08                push A
 01DF 5100              mov A,[__r1]
 01E1 08                push A
 01E2 5100              mov A,[__r2]
 01E4 08                push A
 01E5 5100              mov A,[__r3]
 01E7 08                push A
 01E8 7C0000            xcall __fpsub
 01EB 18                pop A
 01EC 5300              mov [__r7],A
 01EE 18                pop A
 01EF 5300              mov [__r6],A
 01F1 18                pop A
 01F2 5300              mov [__r5],A
 01F4 18                pop A
 01F5 38FC              add SP,-4
 01F7 08                push A
 01F8 5100              mov A,[__r5]
 01FA 08                push A
 01FB 5100              mov A,[__r6]
 01FD 08                push A
 01FE 5100              mov A,[__r7]
 0200 08                push A
 0201 7C0000            xcall __fp2long
 0204 18                pop A
 0205 5300              mov [__r5],A
 0207 18                pop A
 0208 5300              mov [__r4],A
 020A 38FE              add SP,-2
 020C 5100              mov A,[__r5]
 020E 0100              add A,0
 0210 5401              mov [X+1],A
 0212 5100              mov A,[__r4]
 0214 0980              adc A,-128
 0216 5400              mov [X+0],A
 0218 8020              xjmp L9
 021A           L8:
 021A 5100              mov A,[__r0]
 021C 08                push A
 021D 5100              mov A,[__r1]
 021F 08                push A
 0220 5100              mov A,[__r2]
 0222 08                push A
 0223 5100              mov A,[__r3]
 0225 08                push A
 0226 7C0000            xcall __fp2long
 0229 18                pop A
 022A 5300              mov [__r1],A
 022C 18                pop A
 022D 5300              mov [__r0],A
 022F 38FE              add SP,-2
 0231 5100              mov A,[__r1]
 0233 5401              mov [X+1],A
 0235 5100              mov A,[__r0]
 0237 5400              mov [X+0],A
 0239           L9:
 0239 5201              mov A,[X+1]
 023B 10                push X
 023C 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 023F 20                pop X
 0240                   .dbline 45
 0240           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 0240 52FC              mov A,[X-4]
 0242 10                push X
 0243 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 0246 20                pop X
 0247                   .dbline -2
 0247           L6:
 0247 38FE              add SP,-2
 0249 20                pop X
 024A                   .dbline 0 ; func end
 024A 7F                ret
 024B                   .dbsym l pulse -5 I
 024B                   .dbend
 024B                   .dbfunc e Stop _Stop fV
 024B           _Stop::
 024B                   .dbline -1
 024B                   .dbline 50
 024B           ; }
 024B           ; 
 024B           ; //Pysäyttää Moottorit
 024B           ; void Stop(void)
 024B           ; {
 024B                   .dbline 51
 024B           ;       PWM8_OIKEA_WritePulseWidth(0);
 024B 10                push X
 024C 5000              mov A,0
 024E 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 0251                   .dbline 52
 0251           ;       PWM8_VASEN_WritePulseWidth(0);
 0251 5000              mov A,0
 0253 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 0256 20                pop X
 0257                   .dbline 54
 0257           ;       
 0257           ;       LEFTC_Data_ADDR &= NOLLAA;
 0257 4104F0            and REG[0x4],-16
 025A                   .dbline 54
 025A                   .dbline -2
 025A           L10:
 025A                   .dbline 0 ; func end
 025A 7F                ret
 025B                   .dbend
 025B                   .dbfunc e TurnLeft _TurnLeft fV
 025B           ;          pulse -> X-5
 025B           _TurnLeft::
 025B                   .dbline -1
 025B 10                push X
 025C 4F                mov X,SP
 025D 3802              add SP,2
 025F                   .dbline 59
 025F           ; }
 025F           ; 
 025F           ; //Kääntyy vasemmalle
 025F           ; void TurnLeft(int pulse)
 025F           ; {
 025F                   .dbline 60
 025F           ;       LEFTC_Data_ADDR &= NOLLAA;
 025F 4104F0            and REG[0x4],-16
 0262                   .dbline 60
 0262                   .dbline 61
 0262           ;       LEFTC_Data_ADDR |= LEFTFRIGHTB
 0262 430406            or REG[0x4],6
 0265                   .dbline 63
 0265           ;               
 0265           ;       PWM8_VASEN_WritePulseWidth((BYTE)pulse);
 0265 52FC              mov A,[X-4]
 0267 10                push X
 0268 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 026B 20                pop X
 026C                   .dbline 64
 026C           ;       PWM8_OIKEA_WritePulseWidth((BYTE)(pulse * 0.8f));
 026C 52FC              mov A,[X-4]
 026E 5300              mov [__r3],A
 0270 52FB              mov A,[X-5]
 0272 5300              mov [__r2],A
 0274 470080            tst [__r2],-128
 0277 A009              jz X6
 0279 5500FF            mov [__r1],-1
 027C 5500FF            mov [__r0],-1
 027F 8007              jmp X7
 0281           X6:
 0281 550000            mov [__r1],0
 0284 550000            mov [__r0],0
 0287           X7:
 0287 5100              mov A,[__r0]
 0289 08                push A
 028A 5100              mov A,[__r1]
 028C 08                push A
 028D 5100              mov A,[__r2]
 028F 08                push A
 0290 5100              mov A,[__r3]
 0292 08                push A
 0293 7C0000            xcall __long2fp
 0296 18                pop A
 0297 5300              mov [__r3],A
 0299 18                pop A
 029A 5300              mov [__r2],A
 029C 18                pop A
 029D 5300              mov [__r1],A
 029F 18                pop A
 02A0 08                push A
 02A1 5100              mov A,[__r1]
 02A3 08                push A
 02A4 5100              mov A,[__r2]
 02A6 08                push A
 02A7 5100              mov A,[__r3]
 02A9 08                push A
 02AA 503F              mov A,63
 02AC 08                push A
 02AD 504C              mov A,76
 02AF 08                push A
 02B0 50CC              mov A,-52
 02B2 08                push A
 02B3 50CD              mov A,-51
 02B5 08                push A
 02B6 7C0000            xcall __fpmul
 02B9 18                pop A
 02BA 5300              mov [__r3],A
 02BC 18                pop A
 02BD 5300              mov [__r2],A
 02BF 18                pop A
 02C0 5300              mov [__r1],A
 02C2 18                pop A
 02C3 5300              mov [__r0],A
 02C5 38FC              add SP,-4
 02C7 5047              mov A,71
 02C9 08                push A
 02CA 5000              mov A,0
 02CC 08                push A
 02CD 08                push A
 02CE 08                push A
 02CF 5100              mov A,[__r0]
 02D1 08                push A
 02D2 5100              mov A,[__r1]
 02D4 08                push A
 02D5 5100              mov A,[__r2]
 02D7 08                push A
 02D8 5100              mov A,[__r3]
 02DA 08                push A
 02DB 7C0000            xcall __fpcmp
 02DE 38F8              add SP,-8
 02E0 39FF              cmp A,-1
 02E2 A047              jz L13
 02E4 5047              mov A,71
 02E6 08                push A
 02E7 5000              mov A,0
 02E9 08                push A
 02EA 08                push A
 02EB 08                push A
 02EC 5100              mov A,[__r0]
 02EE 08                push A
 02EF 5100              mov A,[__r1]
 02F1 08                push A
 02F2 5100              mov A,[__r2]
 02F4 08                push A
 02F5 5100              mov A,[__r3]
 02F7 08                push A
 02F8 7C0000            xcall __fpsub
 02FB 18                pop A
 02FC 5300              mov [__r7],A
 02FE 18                pop A
 02FF 5300              mov [__r6],A
 0301 18                pop A
 0302 5300              mov [__r5],A
 0304 18                pop A
 0305 38FC              add SP,-4
 0307 08                push A
 0308 5100              mov A,[__r5]
 030A 08                push A
 030B 5100              mov A,[__r6]
 030D 08                push A
 030E 5100              mov A,[__r7]
 0310 08                push A
 0311 7C0000            xcall __fp2long
 0314 18                pop A
 0315 5300              mov [__r5],A
 0317 18                pop A
 0318 5300              mov [__r4],A
 031A 38FE              add SP,-2
 031C 5100              mov A,[__r5]
 031E 0100              add A,0
 0320 5401              mov [X+1],A
 0322 5100              mov A,[__r4]
 0324 0980              adc A,-128
 0326 5400              mov [X+0],A
 0328 8020              xjmp L14
 032A           L13:
 032A 5100              mov A,[__r0]
 032C 08                push A
 032D 5100              mov A,[__r1]
 032F 08                push A
 0330 5100              mov A,[__r2]
 0332 08                push A
 0333 5100              mov A,[__r3]
 0335 08                push A
 0336 7C0000            xcall __fp2long
 0339 18                pop A
 033A 5300              mov [__r1],A
 033C 18                pop A
 033D 5300              mov [__r0],A
 033F 38FE              add SP,-2
 0341 5100              mov A,[__r1]
 0343 5401              mov [X+1],A
 0345 5100              mov A,[__r0]
 0347 5400              mov [X+0],A
 0349           L14:
 0349 5201              mov A,[X+1]
 034B 10                push X
 034C 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 034F 20                pop X
 0350                   .dbline -2
 0350           L11:
 0350 38FE              add SP,-2
 0352 20                pop X
 0353                   .dbline 0 ; func end
 0353 7F                ret
 0354                   .dbsym l pulse -5 I
 0354                   .dbend
 0354                   .dbfunc e TurnRight _TurnRight fV
 0354           ;          pulse -> X-5
 0354           _TurnRight::
 0354                   .dbline -1
 0354 10                push X
 0355 4F                mov X,SP
 0356 3802              add SP,2
 0358                   .dbline 69
 0358           ; }
 0358           ; 
 0358           ; //Kääntyy oikealle
 0358           ; void TurnRight(int pulse)
 0358           ; {             
 0358                   .dbline 70
 0358           ;       LEFTC_Data_ADDR &= NOLLAA;
 0358 4104F0            and REG[0x4],-16
 035B                   .dbline 70
 035B                   .dbline 71
 035B           ;       LEFTC_Data_ADDR |= LEFTBRIGHTF;
 035B 430409            or REG[0x4],9
 035E                   .dbline 71
 035E                   .dbline 73
 035E           ;       
 035E           ;       PWM8_VASEN_WritePulseWidth((BYTE)(pulse * 0.8f));
 035E 52FC              mov A,[X-4]
 0360 5300              mov [__r3],A
 0362 52FB              mov A,[X-5]
 0364 5300              mov [__r2],A
 0366 470080            tst [__r2],-128
 0369 A009              jz X9
 036B 5500FF            mov [__r1],-1
 036E 5500FF            mov [__r0],-1
 0371 8007              jmp X10
 0373           X9:
 0373 550000            mov [__r1],0
 0376 550000            mov [__r0],0
 0379           X10:
 0379 5100              mov A,[__r0]
 037B 08                push A
 037C 5100              mov A,[__r1]
 037E 08                push A
 037F 5100              mov A,[__r2]
 0381 08                push A
 0382 5100              mov A,[__r3]
 0384 08                push A
 0385 7C0000            xcall __long2fp
 0388 18                pop A
 0389 5300              mov [__r3],A
 038B 18                pop A
 038C 5300              mov [__r2],A
 038E 18                pop A
 038F 5300              mov [__r1],A
 0391 18                pop A
 0392 08                push A
 0393 5100              mov A,[__r1]
 0395 08                push A
 0396 5100              mov A,[__r2]
 0398 08                push A
 0399 5100              mov A,[__r3]
 039B 08                push A
 039C 503F              mov A,63
 039E 08                push A
 039F 504C              mov A,76
 03A1 08                push A
 03A2 50CC              mov A,-52
 03A4 08                push A
 03A5 50CD              mov A,-51
 03A7 08                push A
 03A8 7C0000            xcall __fpmul
 03AB 18                pop A
 03AC 5300              mov [__r3],A
 03AE 18                pop A
 03AF 5300              mov [__r2],A
 03B1 18                pop A
 03B2 5300              mov [__r1],A
 03B4 18                pop A
 03B5 5300              mov [__r0],A
 03B7 38FC              add SP,-4
 03B9 5047              mov A,71
 03BB 08                push A
 03BC 5000              mov A,0
 03BE 08                push A
 03BF 08                push A
 03C0 08                push A
 03C1 5100              mov A,[__r0]
 03C3 08                push A
 03C4 5100              mov A,[__r1]
 03C6 08                push A
 03C7 5100              mov A,[__r2]
 03C9 08                push A
 03CA 5100              mov A,[__r3]
 03CC 08                push A
 03CD 7C0000            xcall __fpcmp
 03D0 38F8              add SP,-8
 03D2 39FF              cmp A,-1
 03D4 A047              jz L17
 03D6 5047              mov A,71
 03D8 08                push A
 03D9 5000              mov A,0
 03DB 08                push A
 03DC 08                push A
 03DD 08                push A
 03DE 5100              mov A,[__r0]
 03E0 08                push A
 03E1 5100              mov A,[__r1]
 03E3 08                push A
 03E4 5100              mov A,[__r2]
 03E6 08                push A
 03E7 5100              mov A,[__r3]
 03E9 08                push A
 03EA 7C0000            xcall __fpsub
 03ED 18                pop A
 03EE 5300              mov [__r7],A
 03F0 18                pop A
 03F1 5300              mov [__r6],A
 03F3 18                pop A
 03F4 5300              mov [__r5],A
 03F6 18                pop A
 03F7 38FC              add SP,-4
 03F9 08                push A
 03FA 5100              mov A,[__r5]
 03FC 08                push A
 03FD 5100              mov A,[__r6]
 03FF 08                push A
 0400 5100              mov A,[__r7]
 0402 08                push A
 0403 7C0000            xcall __fp2long
 0406 18                pop A
 0407 5300              mov [__r5],A
 0409 18                pop A
 040A 5300              mov [__r4],A
 040C 38FE              add SP,-2
 040E 5100              mov A,[__r5]
 0410 0100              add A,0
 0412 5401              mov [X+1],A
 0414 5100              mov A,[__r4]
 0416 0980              adc A,-128
 0418 5400              mov [X+0],A
 041A 8020              xjmp L18
 041C           L17:
 041C 5100              mov A,[__r0]
 041E 08                push A
 041F 5100              mov A,[__r1]
 0421 08                push A
 0422 5100              mov A,[__r2]
 0424 08                push A
 0425 5100              mov A,[__r3]
 0427 08                push A
 0428 7C0000            xcall __fp2long
 042B 18                pop A
 042C 5300              mov [__r1],A
 042E 18                pop A
 042F 5300              mov [__r0],A
 0431 38FE              add SP,-2
 0433 5100              mov A,[__r1]
 0435 5401              mov [X+1],A
 0437 5100              mov A,[__r0]
 0439 5400              mov [X+0],A
 043B           L18:
 043B 5201              mov A,[X+1]
 043D 10                push X
 043E 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 0441 20                pop X
 0442                   .dbline 74
 0442           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 0442 52FC              mov A,[X-4]
 0444 10                push X
 0445 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 0448 20                pop X
 0449                   .dbline -2
 0449           L15:
 0449 38FE              add SP,-2
 044B 20                pop X
 044C                   .dbline 0 ; func end
 044C 7F                ret
 044D                   .dbsym l pulse -5 I
 044D                   .dbend
 044D                   .dbfunc e TestTurnLeft _TestTurnLeft fV
 044D           ;          pulse -> X-5
 044D           _TestTurnLeft::
 044D                   .dbline -1
 044D 10                push X
 044E 4F                mov X,SP
 044F                   .dbline 80
 044F           ; }
 044F           ; 
 044F           ; 
 044F           ; //TEST LEFTTURN
 044F           ; void TestTurnLeft(int pulse)
 044F           ; {
 044F                   .dbline 81
 044F           ;       LEFTC_Data_ADDR &= NOLLAA;
 044F 4104F0            and REG[0x4],-16
 0452                   .dbline 81
 0452                   .dbline 82
 0452           ;       LEFTC_Data_ADDR |= 0b00000001;
 0452 430401            or REG[0x4],1
 0455                   .dbline 84
 0455           ;       
 0455           ;       PWM8_VASEN_WritePulseWidth(0);
 0455 10                push X
 0456 5000              mov A,0
 0458 7C0000            xcall _PWM8_VASEN_WritePulseWidth
 045B 20                pop X
 045C                   .dbline 85
 045C           ;       PWM8_OIKEA_WritePulseWidth((BYTE)pulse);
 045C 52FC              mov A,[X-4]
 045E 10                push X
 045F 7C0000            xcall _PWM8_OIKEA_WritePulseWidth
 0462 20                pop X
 0463                   .dbline -2
 0463           L19:
 0463 20                pop X
 0464                   .dbline 0 ; func end
 0464 7F                ret
 0465                   .dbsym l pulse -5 I
 0465                   .dbend
